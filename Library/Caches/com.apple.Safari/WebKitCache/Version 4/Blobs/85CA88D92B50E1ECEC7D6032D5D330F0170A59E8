<center>
<!DOCTYPE html>
<!--[if IE 6]>
<html id="ie6" lang="en-US">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 6) | !(IE 7) | !(IE 8)  ]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>
<!-- te th.me.e jq - header . scss - php -->

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />

<!-- 
	<script type="text/javascript" src="/blog/syntax-highlighter/scripts/minCoreAndJSBrush.js"></script>
	<script type="text/javascript">SyntaxHighlighter.all();</script>
-->
	<!-- Google Survey -->
	<!-- <script async="" defer="" src="//survey.g.doubleclick.net/async_survey?site=q3ahcrqc6awedg6f76voacmpdu"></script> -->
		
<title>Developing iOS Apps Using Swift Tutorial Part 2 | iOS Swift Tutorials by Jameson Quave</title>
	<!-- THX -->
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://jamesonquave.com/blog/wp-content/themes/twentyeleven/style.css" />
<link rel="pingback" href="http://jamesonquave.com/blog/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://jamesonquave.com/blog/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel='canonical' href='http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/' />

<!-- All in One SEO Pack 2.2.5.1 by Michael Torbert of Semper Fi Web Design[740,833] -->
<meta name="description" itemprop="description" content="Part 2 in my series of instructional guides to developing iOS apps using the all new Swift programming language." />

<meta name="keywords" itemprop="keywords" content="swift,ios,objective-c,ios 8,iphone,ipad,programming,development,apple,tutorial,ios8,how,to,apps,ios apps,iphone apps" />

<link rel="canonical" href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/" />
		<script type="text/javascript">
		  var _gaq = _gaq || [];
		  _gaq.push(['_setAccount', 'UA-34435792-1']);
		  _gaq.push(['_trackPageview']);
		  (function() {
		    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
		  })();
		</script>
		<script type="text/javascript">
		function recordOutboundLink(link, category, action) {
					_gat._getTrackerByName()._trackEvent(category, action);
					if ( link.target == '_blank' ) return true;
			setTimeout('document.location = "' + link.href + '"', 100);
			return false;
		}
			/* use regular Javascript for this */
			function getAttr(ele, attr) {
				var result = (ele.getAttribute && ele.getAttribute(attr)) || null;
				if( !result ) {
					var attrs = ele.attributes;
					var length = attrs.length;
					for(var i = 0; i < length; i++)
					if(attr[i].nodeName === attr) result = attr[i].nodeValue;
				}
				return result;
			}
			
			function aiosp_addLoadEvent(func) {
			  var oldonload = window.onload;
			  if (typeof window.onload != 'function') {
			    window.onload = func;
			  } else {
			    window.onload = function() {
			      if (oldonload) {
			        oldonload();
			      }
			      func();
			    }
			  }
			}
			
			function aiosp_addEvent(element, evnt, funct){
			  if (element.attachEvent)
			   return element.attachEvent('on'+evnt, funct);
			  else
			   return element.addEventListener(evnt, funct, false);
			}

			aiosp_addLoadEvent(function () {
				var links = document.getElementsByTagName('a');
				for (var x=0; x < links.length; x++) {
					if (typeof links[x] == 'undefined') continue;
					aiosp_addEvent( links[x], 'onclick', function () {
						var mydomain = new RegExp(document.domain, 'i');
						href = getAttr(this, 'href');
						if (href && href.toLowerCase().indexOf('http') === 0 && !mydomain.test(href)) {
							recordOutboundLink(this, 'Outbound Links', href);
						}
					});
				}
			});
		</script>
<!-- /all in one seo pack -->
<link rel="alternate" type="application/rss+xml" title="iOS Swift Tutorials by Jameson Quave &raquo; Feed" href="http://jamesonquave.com/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="iOS Swift Tutorials by Jameson Quave &raquo; Comments Feed" href="http://jamesonquave.com/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="iOS Swift Tutorials by Jameson Quave &raquo; Developing iOS Apps Using Swift Tutorial Part 2 Comments Feed" href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/feed/" />
<link rel='stylesheet' id='flick-css'  href='http://jamesonquave.com/blog/wp-content/plugins/mailchimp//css/flick/flick.css?ver=4.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='http://jamesonquave.com/blog/?mcsf_action=main_css&#038;ver=4.1.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='http://jamesonquave.com/blog/wp-content/plugins/mailchimp/css/ie.css?ver=4.1.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='fb_data_style-css'  href='http://jamesonquave.com/blog/wp-content/plugins/feedburner-form/control/fbstyle.css?ver=4.1.1' type='text/css' media='all' />
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.1'></script>
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-content/plugins/mailchimp/js/scrollTo.js?ver=1.2.13'></script>
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-includes/js/jquery/jquery.form.min.js?ver=3.37.0'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var mailchimpSF = {"ajax_url":"http:\/\/jamesonquave.com\/blog\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-content/plugins/mailchimp/js/mailchimp.js?ver=1.2.13'></script>
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-includes/js/jquery/ui/core.min.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://jamesonquave.com/blog/wp-content/plugins/mailchimp//js/datepicker.js?ver=4.1.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://jamesonquave.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://jamesonquave.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Swift Tutorial  &#8211; Developing iOS 8 Apps Part 1' href='http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial/' />
<link rel='next' title='Developing iOS Apps Using Swift Part 3 &#8211; Best Practices' href='http://jamesonquave.com/blog/developing-ios-apps-using-swift-part-3-best-practices/' />
<meta name="generator" content="WordPress 4.1.1" />
<link rel='shortlink' href='http://jamesonquave.com/blog/?p=588' />
	<script type="text/javascript">
		jQuery(function($) {
			$('.date-pick').datepicker({
				autoFocusNextInput: true,
				constrainInput: false,
				changeMonth: true,
				changeYear: true,
				beforeShow: function(input, inst) { $('#ui-datepicker-div').addClass('show'); },
				dateFormat: 'yy/mm/dd',
			});			
			
			d = new Date();
			$('.birthdate-pick').datepicker({
				autoFocusNextInput: true,
				constrainInput: false,
				changeMonth: true,
				changeYear: false,
				minDate: new Date(d.getFullYear(), 1-1, 1),
				maxDate: new Date(d.getFullYear(), 12-1, 31),
				beforeShow: function(input, inst) { $('#ui-datepicker-div').removeClass('show'); },
				dateFormat: 'mm/dd',
			});
			
				
		});
	</script>
	 
		<style type="text/css">
			.social-ring:after {
			    clear: both;
			    content: " ";
			    display: block;
			    font-size: 0;
			    height: 0;
			    line-height: 0;
			    visibility: hidden;
			    width: 0;
			}	
			.social-ring {
				margin: 0 !important;
				padding: 0 !important;
				line-height: 20px !important;
				height: auto;
				font-size: 11px;
			}
			.social-ring-button {
				float: left !important;
								height: 30px;
								margin: 0 5px 0 0 !important;
				padding: 0 !important;
			}
			.social-ring .social-ring-button iframe {
				max-width: none !important;
			}
		</style>
	<!-- All in one Favicon 4.1 --><link rel="icon" href="http://jamesonquave.com/blog/wp-content/uploads/profilePic.png" type="image/png"/>
	<style type="text/css">
			#site-title,
		#site-description {
			position: absolute !important;
			clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
		</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style>
<!-- 
			Plugin: Super Simple Google Analytics 
	Plugin URL: Super Simple Google Analytics


	-->

<script type="text/javascript">
	  var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-34435792-1']);
	  _gaq.push(['_trackPageview']);
	
	  (function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
	</script><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<!-- S -->
<script type="text/javascript" src="/common/cookies.js"></script>
<script type="text/javascript" src="/common/cookies_jq.js"></script>

<!-- start Mixpanel --><script type="text/javascript">(function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
mixpanel.init("e3e2a38b6a5c6982a9440fc57cba47e0");</script><!-- end Mixpanel -->

<script>(function() {
var _fbq = window._fbq || (window._fbq = []);
if (!_fbq.loaded) {
var fbds = document.createElement('script');
fbds.async = true;
fbds.src = '//connect.facebook.net/en_US/fbds.js';
var s = document.getElementsByTagName('script')[0];
s.parentNode.insertBefore(fbds, s);
_fbq.loaded = true;
}
_fbq.push(['addPixelId', '708509255921759']);
})();
window._fbq = window._fbq || [];
window._fbq.push(['track', 'PixelInitialized', {}]);
</script>
<noscript><img height="1" width="1" alt="" style="display:none" src="https://www.facebook.com/tr?id=708509255921759&amp;ev=PixelInitialized" /></noscript>
</head>





<body class="single single-post postid-588 single-format-standard custom-background two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			

			
			<!--				<div class="only-search">
					<form method="get" id="searchform" action="http://jamesonquave.com/blog/">
		<label for="s" class="assistive-text">Search</label>
		<input type="text" class="field" name="s" id="s" placeholder="Search" />
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search" />
	</form>
				</div>-->
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Main menu</h3>
								<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
				<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
								<div class="menu"><ul><li ><a href="http://jamesonquave.com/blog/">Home</a></li><li class="page_item page-item-2"><a href="http://jamesonquave.com/blog/about/">About</a></li><li class="page_item page-item-128"><a href="http://jamesonquave.com/blog/work-with-me/">Contact</a></li><li class="page_item page-item-722"><a href="http://jamesonquave.com/forum" target="_blank">Forums</a></li><li class="page_item page-item-928"><a href="http://jamesonquave.com/blog/learn-swift/" title="Learn Swift - A curated list of the top resources">Learn Swift</a></li><li class="page_item page-item-30"><a href="http://jamesonquave.com/blog/my-projects/">Projects</a></li><li class="page_item page-item-849"><a href="http://jamesonquave.com/swiftebook">Swift Book</a></li><li class="page_item page-item-991"><a href="http://jamesonquave.com/blog/tutorials/" title="Swift Tutorials by Jameson Quave">Swift Tutorials</a></li><li class="page_item page-item-1412"><a href="http://jamesonquave.com/blog/write-for-us/">Write for Us!</a></li></ul></div>
				
				<div class="siteName">JamesonQuave.com</div>
			</nav><!-- #access -->
			
	</header><!-- #branding -->


	<div id="main">
</center>

<style>
article {
	width: 100%;
}
#content {
	width:85%;
}
</style>
<script type="text/javascript" src="/blog/wp-content/themes/twentyeleven/js/jqp.js"></script>

		<div id="primary">
			<div id="content" role="main">


<style>
#mc_embed_signup {
/*  background-color: #FF6600;
  color: #FFF !important; */
  padding: 15px;
  padding-top: 75px;
  padding-bottom: 35px;
  font-size: 1.2em;
  border-left: 1px dashed #666;
}
#mc_embed_signup h2 {
/*  color: #FFF !important;*/
  border: 1px solid #FFF;
}
#mc-embedded-subscribe {
  margin-top: 10px;
  background-color: #33CC33;
  color: #FFF;
  border: 1px solid #22BB22;
  cursor: pointer;
  -webkit-appearance: none;
  border-radius: 3px;
}
</style>
<!-- Begin MailChimp Signup Form -->
<div id="mc_embed_signup">
<form action="//jamesonquave.us6.list-manage.com/subscribe/post?u=1d2576bf288fe2fd7fa71bd20&amp;id=6c787ed58a" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
        <p>Want Swift news  and tutorials delivered to your inbox?<br />Subscribe now and I'll start sending you updates.<br /><i>No Spam. Ever.</i></p>
<div class="mc-field-group">
	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL" placeholder="e-mail address">
</div>
	<div id="mce-responses" class="clear">
		<div class="response" id="mce-error-response" style="display:none"></div>
		<div class="response" id="mce-success-response" style="display:none"></div>
	</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;"><input type="text" name="b_1d2576bf288fe2fd7fa71bd20_6c787ed58a" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>

<!--End mc_embed_signup-->

				
					<nav id="nav-single">
						<h3 class="assistive-text">Post navigation</h3>
						<span class="nav-previous"><a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial/" rel="prev"><span class="meta-nav">&larr;</span> Previous</a></span>
						<span class="nav-next"><a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-part-3-best-practices/" rel="next">Next <span class="meta-nav">&rarr;</span></a></span>
					</nav><!-- #nav-single -->
					
					
					
<article id="post-588" class="post-588 post type-post status-publish format-standard hentry category-ios-apps category-iphone-apps category-programming category-swift tag-apps tag-ios tag-ipad tag-iphone tag-swift-2 tag-tutorial">
	<header class="entry-header">
		<h1 class="entry-title">Developing iOS Apps Using Swift Tutorial Part 2</h1>

				<div class="entry-meta">
			<span class="sep">Posted on </span><a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/" title="6:39 pm" rel="bookmark"><time class="entry-date" datetime="2014-06-02T18:39:22+00:00" pubdate>June 2, 2014</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://jamesonquave.com/blog/author/jquave/" title="View all posts by Jameson Quave" rel="author">Jameson Quave</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	
	<div class="entry-content">
		<!-- Social Ring Buttons Start --><div class="social-ring">
<div class="social-ring-button">
		<a href="https://twitter.com/share" data-text="Developing iOS Apps Using Swift Tutorial Part 2" class="twitter-share-button" data-via="jquave" data-url="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/">Tweet</a>
		
		<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
		</div>
<div class="social-ring-button"><div class="g-plusone" data-size="medium" data-href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/"></div></div>
<div class="social-ring-button"><fb:like href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/" width="140" send="false" showfaces="false" layout="button_count" action="like"></fb:like></div>
</div><div style="clear:both;">&nbsp;</div><!-- Social Ring Buttons End -->
<p><strong><i>This section completely updated to reflect changes in Xcode 6.3, as of April 16, 2015</i></strong></b></p>
<p>In part 1 we went over some basics of Swift, and set up a simple example project that creates a Table View and a puts some text inside of them. If you haven&#8217;t read that yet, <a title="Developing iOS Apps Using Swift Tutorial Part 1" href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial/">give it a read here</a>. If you enjoy these tutorials, I&#8217;m also working on a book full of quality content for Swift developers, and it&#8217;s available for <a href='http://jamesonquave.com/swiftebook'>Pre-Order now</a>.</p>
<p>For this section, we&#8217;re going to do something a little more ambitious. We&#8217;re going to hit the iTunes Search API for the iTunes Store, download the JSON results, parse them in to Dictionaries and then populate our Table View with this information. Then, we will add some user interaction by adding a click event to the tableview, so that when an item is clicked the iTunes store item will be opened.</p>
<p>If this sounds like a lot of work, don&#8217;t sweat it. This is pretty basic functionality for iOS apps and it&#8217;s one of the most common things any developer has to do. Let&#8217;s get going&#8230;<br />
<script type="text/javascript">
    google_ad_client = "ca-pub-0669634193877934";
    google_ad_slot = "6023897638";
    google_ad_width = 728;
    google_ad_height = 90;
</script><br />
<!-- 728x90 website ad --><br />
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
<p><strong>Connecting the UI</strong></p>
<p>The first thing we need to do is get a reference to our tableView, so it can be used from code. Go ahead and add this line to your ViewController.swift file, just under the class definition, but outside of any functions.</p>
<pre class="brush: js;">@IBOutlet var appsTableView : UITableView!</pre>
<p>This bit of code allows up to connect our Table View in our Storyboard to this variable, &#8220;appsTableView&#8221;. Save this file and open up your storyboard. Now select the View Controller object (the one with a yellow icon) and in the right-hand side pane click the last tab, the Connections Inspector. Here you should now see an outlet for &#8220;appsTableView&#8221;. Click and drag from the dot next to this outlet on to the Table View in our scene.</p>
<p><img src='http://jamesonquave.com/tutImg/ConnectTableView.png' /></p>
<p>Let&#8217;s also add a variable to hold the table data itself. Just under the class definition for ViewController add:</p>
<pre class="brush: js">var tableData = []</pre>
<p><strong>Making the API Request</strong></p>
<p>Now that we have the UI connected, we&#8217;re ready to make an API call. Create a new function called searchItunesFor(searchTerm: String). We&#8217;ll use this to make our requests happen for arbitrary search terms.</p>
<p>To keep this tutorial short, I&#8217;m going to just post my final code and let the comments do some of the explaining. I&#8217;m always open to questions and further discussion in the comments though, so feel free to chime in!</p>
<pre class="brush: js;">
func searchItunesFor(searchTerm: String) {
    // The iTunes API wants multiple terms separated by + symbols, so replace spaces with + signs
    let itunesSearchTerm = searchTerm.stringByReplacingOccurrencesOfString(" ", withString: "+", options: NSStringCompareOptions.CaseInsensitiveSearch, range: nil)
    
    // Now escape anything else that isn't URL-friendly
    if let escapedSearchTerm = itunesSearchTerm.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding) {
        let urlPath = "http://itunes.apple.com/search?term=\(escapedSearchTerm)&#038;media=software"
        let url = NSURL(string: urlPath)
        let session = NSURLSession.sharedSession()
        let task = session.dataTaskWithURL(url!, completionHandler: {data, response, error -> Void in
            println("Task completed")
            if(error != nil) {
                // If there is an error in the web request, print it to the console
                println(error.localizedDescription)
            }
            var err: NSError?
            if let jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &#038;err) as? NSDictionary {
                if(err != nil) {
                    // If there is an error parsing JSON, print it to the console
                    println("JSON Error \(err!.localizedDescription)")
                }
                if let results: NSArray = jsonResult["results"] as? NSArray {
                    dispatch_async(dispatch_get_main_queue(), {
                        self.tableData = results
                        self.appsTableView!.reloadData()
                    })
                }
            }
        })
        
        // The task is just an object with all these properties set
        // In order to actually make the web request, we need to "resume"
        task.resume()
    }
}
</pre>
<p>Let&#8217;s go line-by-line.</p>
<p>First, we need to do some fixing of the search terms we pass in, the Search API wants terms in the form of &#8220;First+Second+Third+Words&#8221; rather than &#8220;First%20Second%20&#8230;&#8221; etc. So instead of URL-encoding, we use an NSString method called stringByReplacingOccurencesOfString. This returns a modified versions of the searchTerm variable with all our spaces replaced with + symbols.</p>
<p>Next, we actually escape the search term in case there are other symbols that won&#8217;t fit in a URL by using the function <strong>stringByAddingPercentEscapesUsingEncoding</strong>.</p>
<p>The next 2 lines define an NSURL object that can be used as a Request URL for iOS&#8217;s networking API.</p>
<p>These next two lines are what gets us going with a NSURLSession and defines the task we want it to perform. This is were the heavy lifting begins, as the dataTaskWithURL method takes a closure as it&#8217;s final argument, which is executed after a request is sent, and a result is determined.</p>
<pre class="brush: js;">let session = NSURLSession.sharedSession()</pre>
<pre class="brush: js;">let task = session.dataTaskWithURL(url, completionHandler: {data, response, error -> Void in</pre>
<p>The first line grabs the default NSURLSession object. This is used for all our networking calls. The second line then creates the connection task which is going to be used to actually send the request. dataTaskWithURL has a closure as it&#8217;s last parameter, which gets run upon completion of the request. Here we check for errors in the response, then parse the JSON, and call the delegate method didReceiveAPIResults.</p>
<p>Finally, task.resume() actually begins the request.</p>
<p>Because this task happens in the background, we need to jump in to the foreground before we update the UI. So we need to use dispatch_async to move back in to the main thread, and reload the table view. The first argument specifies the thread the update should perform on, which we specify as dispatch_get_main_queue(). This is a built-in method that simply returns the main thread (the UI thread).</p>
<p><strong>Making the API call</strong></p>
<p>Now we&#8217;ve got a method that starts an iTunes search response when we call it. So let&#8217;s insert the following at the end of viewDidLoad&#8230;</p>
<pre class="brush: js;">searchItunesFor("JQ Software")</pre>
<p>This will find any software products on the iTunes store containing that phrase, which in this case will include a couple of games and various apps.</p>
<p><strong>Receiving the response</strong></p>
<p>Finally our request code is done and all data has been received, didReceiveAPIResults is called and we&#8217;re ready to use the data in our app. Hooray!</p>
<p>The closure method here uses the NSJSONSerialization class to convert our raw data in to useful Dictionary objects by deserializing the results from iTunes.</p>
<p>We can now set our self.tableData object to be the resulting data, and tell the appsTableView to reload it&#8217;s content. This will cause the Table View object to run it&#8217;s own delegate methods. Defining this is the final step in this part of the tutorial.</p>
<p><strong>Updating the Table View UI</strong></p>
<p>You may remember from last time we implemented the function for our Table View that we had a count method, which determines the number of rows; and a cell method, which actually creates the cell and modifies it for each row.</p>
<p>We&#8217;re going to update these now to use the data we pulled down from the web.</p>
<p>Swap out your methods with these two functions:</p>
<pre class="brush: js;">
func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return tableData.count
}

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    let cell: UITableViewCell = UITableViewCell(style: UITableViewCellStyle.Subtitle, reuseIdentifier: "MyTestCell")
    
    if let rowData: NSDictionary = self.tableData[indexPath.row] as? NSDictionary,
        // Grab the artworkUrl60 key to get an image URL for the app's thumbnail
        urlString = rowData["artworkUrl60"] as? String,
        // Create an NSURL instance from the String URL we get from the API
        imgURL = NSURL(string: urlString),
        // Get the formatted price string for display in the subtitle
        formattedPrice = rowData["formattedPrice"] as? String,
        // Download an NSData representation of the image at the URL
        imgData = NSData(contentsOfURL: imgURL),
        // Get the track name
        trackName = rowData["trackName"] as? String {
            // Get the formatted price string for display in the subtitle
            cell.detailTextLabel?.text = formattedPrice
            // Update the imageView cell to use the downloaded image data
            cell.imageView?.image = UIImage(data: imgData)
            // Update the textLabel text to use the trackName from the API
            cell.textLabel?.text = trackName
    }
    return cell
}
</pre>
<p>The numberOfRowsInSection is now simply returning the number of resultant objects from the tableData member, which is set in our prior connectionDidFinishLoading method.</p>
<p>The cellForRowAtIndexPath is also not changed dramatically in this case. Rather than simply returning the row number, we use the row number to grab three pieces of information: the track name, the artwork url, and the price.</p>
<p>Using these keys we construct the title, subtitle, and an image to go along with the cell.</p>
<p>If you&#8217;re coming from another language, you may notice the syntax is a little unusual here. The syntax goes something like this:</p>
<pre class="brush: js;">
if let variableA = optionalThing as? Type,
    variableB = anotherOptionalThing as? Type {
        // variableA and variableB are confirmed to exist
}
</pre>
<p>This is part of optional binding. The statement &#8220;if let variableA = optionalThing as? Type {}&#8221; will only execute the code within {} if optionalThing is able to be casted to Type. It&#8217;s a check.. can we assign a variable called variableA to optionalThing as a type of Type? If so, then execute this next bit of code. You can also specify multiple checks, in this case we check if both variableA and variableB are able to be assigned, if so then we execute the code in the block.</p>
<p>We use optional binding in our cellForRowAtIndexPath method in order to make sure artworkUrl60, formattedPrice, and trackName are actually keys we get back from the API. If any of these fail, the code within the curly braces is skipped, preventing an error from occurring when we try to set the text or image to a nil value.</p>
<p>&nbsp;</p>
<p>Try running our app, and you&#8217;ll see we for the first time have created something that actually looks like an app all in Swift!</p>
<p><b>But, why is it so laggy!?</b><br />
If you scroll around you might notice it lags when showing table view cells.<br />
In this tableview, we&#8217;re not properly handling quite a few things. Over the next 3 sections we&#8217;ll dive in to what that means and what the proper changes we need to make are. If you like, jump ahead to part 5 where these issues are resolved.</p>
<p>In my upcoming book, I delve more deeply in to why this happens. <a href='http://jamesonquave.com/swiftebook/'>Learn more about it here</a>.</p>
<p>Next time in <a title="Developing iOS Apps Using Swift Part 3 – Best Practices" href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-part-3-best-practices/">Part 3</a> we&#8217;ll work on the interaction piece of the app, allowing users to search for anything they like, and making the table cells clickable!</p>
<p><strong>The completed source code to this section is available <a href='https://github.com/jquave/Swift-Tutorial/tree/Part2'>here</a>.</strong></p>
<p><a title="Developing iOS Apps Using Swift Part 3 – Best Practices" href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-part-3-best-practices/">Go to Part 3 Now -&gt;</a></p>




<div style='position: relative; right:0px; bottom: 0px;width:200px; height:
44px;background-color: clear;'>
<a href='http://twitter.com/jquave' target='_blank'><img src='/twitter.gif' />Follow me on Twitter</a>
</div>

<center>

<div style="font-family: Helvetica;background-color: #eee; border: 1px solid #ddd; padding: 15px; margin: auto;color: #555;" class="book-call-to-action">
<b>Developing iOS 8 Apps in Swift</b><br />
An upcoming ebook detailing everything you need to know to produce marketable apps for iOS 8 using swift.<br />
Learn to produce real world applications through tutorials.
Available for pre-order today at a <b>50% discount</b>.<br /><br />
<a href="http://jamesonquave.com/swiftebook"><h1><strong>Early Access Available Now</strong></h1></a>
	
	<div>
		
		<div style="width:100%; text-align: center;">
			<a title="Developing iOS 8 Apps in Swift" href="http://jamesonquave.com/swiftebook/">
				<img alt="" src="http://jamesonquave.com/swiftBookCover.png" style="width: 280px;" />
			</a>
		
<!--			<center>
				<a href="http://jamesonquave.com/swiftebook/" class="btn">Learn more &raquo;</a>
			</center> -->
		</div>
		
	</div>
	
	<div style="clear: both;">
	
	
	<center>
	
	<!--<b>Early access starting late August 2014</b><br />-->
	
	
	</center>
	</div>

</div>

<div class= "subscribeContainer">
	<center>
	<p><!-- Begin MailChimp Signup Form --></p>
	<div id="mc_embed_signup" class="inlineSubscribeForm">
	<form class="validate" id="mc-embedded-subscribe-form" action="http://jamesonquave.us6.list-manage.com/subscribe/post?u=1d2576bf288fe2fd7fa71bd20&amp;id=6c787ed58a" method="post" name="mc-embedded-subscribe-form" novalidate="" target="_blank">
	<label for="mce-EMAIL" style="color: #aa5555;">Subscribe via e-mail </label><br />
	<input class="email" id="mce-EMAIL" type="email" name="EMAIL" placeholder="email address" required="" value="" /></p>
	<p style="font-size: 0.9em">Sign up now and get a set of <b>FREE</b> video tutorials on writing iOS apps coming soon.</p>
	<div class="clear"><input class="button" id="mc-embedded-subscribe" type="submit" name="subscribe" value="Subscribe" /></div>
	<p><input type="hidden" name="group[3777][16]" id="mce-group[3777]-3777-4" value="1" /> </p>
	</form>
	</div>
	<p><!--End mc_embed_signup--></p>
	</center>
</div>




<hr />



<br />
<a href="http://feeds.feedburner.com/jamesonquave/eBGa" rel="alternate" type="application/rss+xml">Subscribe via RSS</a></p>

</center>




			</div><!-- .entry-content -->

	<footer class="entry-meta">
		This entry was posted in <a href="http://jamesonquave.com/blog/category/ios-apps/" rel="category tag">iOS Apps</a>, <a href="http://jamesonquave.com/blog/category/iphone-apps/" rel="category tag">iPhone Apps</a>, <a href="http://jamesonquave.com/blog/category/programming/" rel="category tag">Programming</a>, <a href="http://jamesonquave.com/blog/category/swift/" rel="category tag">Swift</a> and tagged <a href="http://jamesonquave.com/blog/tag/apps/" rel="tag">apps</a>, <a href="http://jamesonquave.com/blog/tag/ios/" rel="tag">ios</a>, <a href="http://jamesonquave.com/blog/tag/ipad/" rel="tag">ipad</a>, <a href="http://jamesonquave.com/blog/tag/iphone/" rel="tag">iphone</a>, <a href="http://jamesonquave.com/blog/tag/swift-2/" rel="tag">swift</a>, <a href="http://jamesonquave.com/blog/tag/tutorial/" rel="tag">tutorial</a> by <a href="http://jamesonquave.com/blog/author/jquave/">Jameson Quave</a>. Bookmark the <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/" title="Permalink to Developing iOS Apps Using Swift Tutorial Part 2" rel="bookmark">permalink</a>.		
			</footer><!-- .entry-meta -->
</article><!-- #post-588 -->


						<div id="comments">
	
	
			<h2 id="comments-title">
			122 thoughts on &ldquo;<span>Developing iOS Apps Using Swift Tutorial Part 2</span>&rdquo;		</h2>

		
		<ol class="commentlist">
				<li class="comment even thread-even depth-1" id="li-comment-373">
		<article id="comment-373" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/a77fd86f4ebb60bd7b776aa7bdf8245e?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Melvin</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-373"><time pubdate datetime="2014-06-02T18:48:42+00:00">June 2, 2014 at 6:48 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Great to see a tutorial up so quickly, after nearly 3 years I consider my self to be a good iOS programmer, as I have not had much exposure to other languages one thing confuses me a bit in terms of structure in Swift.</p>
<p>In OjbC you have a header where anything public i.e. available to external classes, and then properties could either be in the .m or .h depending on if they were private or public.</p>
<p>I have played a bit with Swift, Am i right in  understanding that all properties are now available to other classes unless declared inside a function.  Also how do functions become private?</p>
<p>Regards Melvin</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=373#respond' onclick='return addComment.moveForm( "comment-373", "373", "respond", "588" )' aria-label='Reply to Melvin'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-374">
		<article id="comment-374" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-374"><time pubdate datetime="2014-06-02T19:09:06+00:00">June 2, 2014 at 7:09 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Melvin, thank you for your comments. The header files are the old tried and true way of determine what classes can see what, but in Swift we&#8217;re dealing with something quite different. It does in fact appear that the only way to make something private is to put it inside a function. This is not unlike javascript, and has become a common pattern to make &#8216;modules&#8217; out of functions in order to create encapsulated systems.</p>
<p>Regarding actually making a function private, the easiest way is to use the module pattern. I&#8217;ve created a Gist for you here. Everything you see in this file is public, except the function named &#8216;someInnerFuncVar&#8217;.</p>
<p><a href="https://gist.github.com/jquave/6fb62d951cebe4f6c7e5" rel="nofollow">https://gist.github.com/jquave/6fb62d951cebe4f6c7e5</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=374#respond' onclick='return addComment.moveForm( "comment-374", "374", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-391">
		<article id="comment-391" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/85c2bfdab49d614704a773bc8eee0046?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Nick D</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-391"><time pubdate datetime="2014-06-03T07:51:10+00:00">June 3, 2014 at 7:51 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I find this pattern somewhat confusing coming from a more purely object-oriented background. Your example shows how a single function might use a nested function to hide it, but how does a class maintain private state that needs to be accessible from multiple functions? Or let&#8217;s say that your nested function would be useful somewhere else in the class &#8211; how do you implement utility functions in a class (in a DRY way) that should never be called from outside the class?</p>
<p>In Obj-C, the de facto way to do this would be to add properties to the anonymous class continuation category in the .m file, effectively &#8220;hiding&#8221; them from the outside world, or to implement methods only in the source file and not declare them in the public header. There was also the option of creating a &#8220;protected&#8221; header for use by subclasses but not as a public interface. </p>
<p>Is there any possible way to do things like this in swift? If not, it seems like clean API design will be very difficult, and that open-source libraries will be full of &#8220;// DO NOT USE THESE FUNCTIONS&#8221;</p>
<p>I&#8217;m wondering why they didn&#8217;t just adopt the public/protected/private access model of c++ and similar languages. You still wouldn&#8217;t need a header, but it would be much easier to restrict access to properties and functions that nothing else has any business futzing with.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=391#respond' onclick='return addComment.moveForm( "comment-391", "391", "respond", "588" )' aria-label='Reply to Nick D'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-4" id="li-comment-537">
		<article id="comment-537" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/6a3d84a1b7030cb65eb48dabb574737e?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">emil</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-537"><time pubdate datetime="2014-06-07T10:33:30+00:00">June 7, 2014 at 10:33 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I read somewhere that private, protected, public etc. are coming to Swift in a near future. Apparently it was something that wasn&#8217;t ready. I believe I read this on some Apple forum where an Apple engineer replied.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=537#respond' onclick='return addComment.moveForm( "comment-537", "537", "respond", "588" )' aria-label='Reply to emil'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-375">
		<article id="comment-375" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/a77fd86f4ebb60bd7b776aa7bdf8245e?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Melvin</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-375"><time pubdate datetime="2014-06-02T19:25:43+00:00">June 2, 2014 at 7:25 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks Jameson, thats what I kind of figured, it does represent a new approach it seems.  Looking forward to the rest of the series.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=375#respond' onclick='return addComment.moveForm( "comment-375", "375", "respond", "588" )' aria-label='Reply to Melvin'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-376">
		<article id="comment-376" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/00fe6cddaf3830e9b0eec6b3b24dcaf4?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://ptrprograms.blogspot.com' rel='external nofollow' class='url'>Paul</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-376"><time pubdate datetime="2014-06-02T22:20:50+00:00">June 2, 2014 at 10:20 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hey. Thanks for these tutorials, I&#8217;m an Android developer with pretty much no experience with iOS, and your first couple of tutorials have been straight forward and make sense to an outsider like myself.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=376#respond' onclick='return addComment.moveForm( "comment-376", "376", "respond", "588" )' aria-label='Reply to Paul'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-379">
		<article id="comment-379" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-379"><time pubdate datetime="2014-06-02T22:53:35+00:00">June 2, 2014 at 10:53 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>That&#8217;s great to hear! There are for sure some best practices that will need to be added in. I was planning to follow up with more interaction, but I may take a pit stop and start refactoring what we already have with proper code architecture principles. This code is not yet ready for production <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=379#respond' onclick='return addComment.moveForm( "comment-379", "379", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-404">
		<article id="comment-404" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/00fe6cddaf3830e9b0eec6b3b24dcaf4?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://ptrprograms.blogspot.com' rel='external nofollow' class='url'>Paul</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-404"><time pubdate datetime="2014-06-03T11:18:59+00:00">June 3, 2014 at 11:18 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>No worries. I write a blog on Android development, and the code is always a proof of concept moreso than &#8220;I promise this won&#8217;t make your fellow developers want to strangle you&#8221;</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=404#respond' onclick='return addComment.moveForm( "comment-404", "404", "respond", "588" )' aria-label='Reply to Paul'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-377">
		<article id="comment-377" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/1914fb3f90635ffb651f844c4f2091c5?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Guillermo</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-377"><time pubdate datetime="2014-06-02T22:33:08+00:00">June 2, 2014 at 10:33 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi! Great tutorial!<br />
I was playing with the code and run into some trouble.<br />
if I change<br />
&#8220;https://itunes.apple.com/search?term=\(escapedSearchTerm)&amp;media=software&#8221;</p>
<p>for</p>
<p>&#8220;https://itunes.apple.com/search?term=\(escapedSearchTerm)&amp;media=music&#8221;</p>
<p>I get an EXC_BAD_INSTRUCTION on<br />
cell.text = rowData[&#8220;trackName&#8221;] as String<br />
But if I println(rowData[&#8220;trackName&#8221;]) it prints fine on the console.<br />
Any thoughts?<br />
Thank you very much!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=377#respond' onclick='return addComment.moveForm( "comment-377", "377", "respond", "588" )' aria-label='Reply to Guillermo'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-378">
		<article id="comment-378" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-378"><time pubdate datetime="2014-06-02T22:50:21+00:00">June 2, 2014 at 10:50 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Try a println() on the JSON response before you try to access its members. Its possible the music results don&#8217;t always include a trackName. Normally I would add error checking to validate the key before using it, but like all of us I&#8217;m still fresh and it&#8217;ll probably come in part 3 <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=378#respond' onclick='return addComment.moveForm( "comment-378", "378", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-385">
		<article id="comment-385" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/3d5150c7cfd7f1293d4e741bbc9c8942?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">El Toro</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-385"><time pubdate datetime="2014-06-03T04:23:23+00:00">June 3, 2014 at 4:23 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>When searching for software I&#8217;m getting a valid JSON response but am unfortunately also getting the same error as Guillermo. Any ideas?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=385#respond' onclick='return addComment.moveForm( "comment-385", "385", "respond", "588" )' aria-label='Reply to El Toro'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-4" id="li-comment-443">
		<article id="comment-443" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-443"><time pubdate datetime="2014-06-04T11:06:51+00:00">June 4, 2014 at 11:06 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I think the proper thing to do here is to add an optional check.</p>
<p>let cellText: String? = rowData[&#8220;trackName&#8221;]<br />
if cellText? {<br />
  cell.text = cellText<br />
}</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=443#respond' onclick='return addComment.moveForm( "comment-443", "443", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-5" id="li-comment-663">
		<article id="comment-663" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/390c83c610739343fc518796757c330c?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Zack</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-663"><time pubdate datetime="2014-06-13T10:54:57+00:00">June 13, 2014 at 10:54 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;m getting this same issue too. I tried the above fix but didn&#8217;t help.</p>
<p>My Xcode throws a breakpoint in at the `if jsonResult` line and when continuing to iterate through, the error I get in console is: fatal error: Can&#8217;t unwrap Optional.None</p>
<p>I haven&#8217;t changed the code you&#8217;ve provided except for the cellText lines above trying to fix this</p>
<p>Thanks for the tutorial! It&#8217;s been helpful, just too green to know how to debug this at this point</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=663#respond' onclick='return addComment.moveForm( "comment-663", "663", "respond", "588" )' aria-label='Reply to Zack'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt depth-5" id="li-comment-664">
		<article id="comment-664" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/390c83c610739343fc518796757c330c?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Zack</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-664"><time pubdate datetime="2014-06-13T10:56:18+00:00">June 13, 2014 at 10:56 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>One additional note on my comment, it happens on the second item when iterating through, I get the above error and EXC_BAD_INSTUCTION as noted above</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=664#respond' onclick='return addComment.moveForm( "comment-664", "664", "respond", "588" )' aria-label='Reply to Zack'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even depth-3" id="li-comment-393">
		<article id="comment-393" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/1914fb3f90635ffb651f844c4f2091c5?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Guillermo</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-393"><time pubdate datetime="2014-06-03T08:24:07+00:00">June 3, 2014 at 8:24 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Yes I checked the JSON, and also tried this</p>
<p>cell.text = &#8220;foo&#8221;</p>
<p>Same error <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_sad.gif" alt=":(" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=393#respond' onclick='return addComment.moveForm( "comment-393", "393", "respond", "588" )' aria-label='Reply to Guillermo'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-4" id="li-comment-407">
		<article id="comment-407" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-407"><time pubdate datetime="2014-06-03T11:26:15+00:00">June 3, 2014 at 11:26 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I think there is probably something wrong with the cell. Try setting up a re-use identifier in a prototype cell in your storyboard. This is discussed more in depth in Part 4.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=407#respond' onclick='return addComment.moveForm( "comment-407", "407", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-384">
		<article id="comment-384" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/411e1a671aef6d8635091ce3bd5063d9?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://www.niknokseyer.com' rel='external nofollow' class='url'>Niknok Seyer</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-384"><time pubdate datetime="2014-06-03T01:15:55+00:00">June 3, 2014 at 1:15 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;m receiving this error:</p>
<p>Search iTunes API at URL <a href="https://itunes.apple.com/search?term=JQ+Software&#038;media=software" rel="nofollow">https://itunes.apple.com/search?term=JQ+Software&#038;media=software</a><br />
fatal error: Can&#8217;t unwrap Optional.None<br />
(lldb)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=384#respond' onclick='return addComment.moveForm( "comment-384", "384", "respond", "588" )' aria-label='Reply to Niknok Seyer'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-408">
		<article id="comment-408" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-408"><time pubdate datetime="2014-06-03T11:26:35+00:00">June 3, 2014 at 11:26 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I think part 4 covers this issue by addressing storyboard re-use identifiers of cells.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=408#respond' onclick='return addComment.moveForm( "comment-408", "408", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even depth-2" id="li-comment-426">
		<article id="comment-426" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/a3d36220fc5451b15af32e6393dd57b9?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Josh P</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-426"><time pubdate datetime="2014-06-03T18:14:54+00:00">June 3, 2014 at 6:14 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I received this error as well. On my end, ctrl+drag+dropping from the &#8216;Table View&#8217; to the &#8216;View Controller&#8217; did not connect &#8220;var appsTableView : UITableView&#8221; as my referencing outlet. </p>
<p>To Fix: I had to go back to the storyboard, ctrl+click on the &#8220;Table View&#8221; and then under &#8220;Referencing Outlets&#8221; select &#8220;appsTableView&#8221;;</p>
<p>Hope this helps. Not sure why it didn&#8217;t connect in the first place.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=426#respond' onclick='return addComment.moveForm( "comment-426", "426", "respond", "588" )' aria-label='Reply to Josh P'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-3" id="li-comment-427">
		<article id="comment-427" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-427"><time pubdate datetime="2014-06-03T18:50:18+00:00">June 3, 2014 at 6:50 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;ve noticed a few quirks working with the new stuff, but it is beta after all. Maybe this stuff will get sorted out.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=427#respond' onclick='return addComment.moveForm( "comment-427", "427", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even depth-3" id="li-comment-433">
		<article id="comment-433" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/34b3c82bec7c8f5929688f17b710dc03?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Joe Sergeant</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-433"><time pubdate datetime="2014-06-04T06:36:03+00:00">June 4, 2014 at 6:36 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;m experiencing the same error Weirdly, I don&#8217;t even see &#8216;appsTableView&#8217; underneath &#8216;Referencing Outlets&#8217; at all. Even though I have &#8216;@IBOutlet var appsTableView : UITableView&#8217; in the &#8216;ViewController&#8217; class.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=433#respond' onclick='return addComment.moveForm( "comment-433", "433", "respond", "588" )' aria-label='Reply to Joe Sergeant'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-4" id="li-comment-434">
		<article id="comment-434" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/34b3c82bec7c8f5929688f17b710dc03?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Joe Sergeant</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-434"><time pubdate datetime="2014-06-04T07:04:47+00:00">June 4, 2014 at 7:04 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Fixed by dragging the TableView from the Storyboard into the ViewController, whereby it created a new IBOutlet.</p>
<p>Curiously, the one it created had &#8216; = nil&#8217; on the end, not sure how important that is?</p>
<p>Either way, it&#8217;s now linked up and working. Great tutorial! <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=434#respond' onclick='return addComment.moveForm( "comment-434", "434", "respond", "588" )' aria-label='Reply to Joe Sergeant'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-5" id="li-comment-438">
		<article id="comment-438" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/6df1485af8e40f618f9161d062651f42?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://www.antimaterya.com' rel='external nofollow' class='url'>Weber</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-438"><time pubdate datetime="2014-06-04T09:09:39+00:00">June 4, 2014 at 9:09 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Not fixed to me. I can&#8217;t link it.<br />
however, I have a lot of Xcode6Beta crashes while editing code. Have anyone the same issues?<br />
Maybe I need to download again.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=438#respond' onclick='return addComment.moveForm( "comment-438", "438", "respond", "588" )' aria-label='Reply to Weber'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt depth-2" id="li-comment-541">
		<article id="comment-541" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/520517abf8f6d1f8503ba7111e3dbc05?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Fred</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-541"><time pubdate datetime="2014-06-08T01:39:31+00:00">June 8, 2014 at 1:39 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>i was getting the same &#8220;fatal error: Can&#8217;t unwrap Optional.None&#8221;.  As mentioned by others looks like this occurs because the outlet is not getting created when the drag/drop from table view to controller occurs.  In order to fix mine, I opened up the assistant editor so that the storyboard file and the viewcontroller.swift file were visible side by side and I did the drag/drop from the tableview straight into the code file.  All compiled and ran perfectly after that.  Great tutorial so far, really learning a lot considering I have extremely limited Obj-C experience (coming from a .Net background).  Looking forward to working thru the rest of the blog posts.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=541#respond' onclick='return addComment.moveForm( "comment-541", "541", "respond", "588" )' aria-label='Reply to Fred'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-386">
		<article id="comment-386" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/dc372593c8ad1d324033652008f706ee?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Darren</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-386"><time pubdate datetime="2014-06-03T04:24:58+00:00">June 3, 2014 at 4:24 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Just wanted to say well done on what is an easy to follow tutorial. Always good to have someone dive right in there and show how old things can be done anew! I&#8217;ll be singing your praises from the rooftop and see what I can do to create some exposure for your swift tutorials.</p>
<p>I&#8217;m looking forward to the next one.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=386#respond' onclick='return addComment.moveForm( "comment-386", "386", "respond", "588" )' aria-label='Reply to Darren'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-389">
		<article id="comment-389" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-389"><time pubdate datetime="2014-06-03T07:19:44+00:00">June 3, 2014 at 7:19 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thank you very much!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=389#respond' onclick='return addComment.moveForm( "comment-389", "389", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-387">
		<article id="comment-387" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/41633dfaf185fdbb8f6aa5fa55fe4ba9?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Christophe</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-387"><time pubdate datetime="2014-06-03T05:05:36+00:00">June 3, 2014 at 5:05 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks for the quick tutorial. Will follow this for next episodes for sure.</p>
<p>I&#8217;m familar with Obj-C but Swift is way faster to code things.<br />
atm I am totaly into Swift and trying to learn the ups and downs.<br />
The only draw back is, it does not support OS X 10.8 or lower.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=387#respond' onclick='return addComment.moveForm( "comment-387", "387", "respond", "588" )' aria-label='Reply to Christophe'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-390">
		<article id="comment-390" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-390"><time pubdate datetime="2014-06-03T07:20:26+00:00">June 3, 2014 at 7:20 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Also I believe it supports only iOS 7.0 and above, but time has a way of making that matter less and less.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=390#respond' onclick='return addComment.moveForm( "comment-390", "390", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-399">
		<article id="comment-399" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/22648755a08db683324fc82c8208144f?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">matt</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-399"><time pubdate datetime="2014-06-03T09:23:05+00:00">June 3, 2014 at 9:23 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Great job! Thank you very much!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=399#respond' onclick='return addComment.moveForm( "comment-399", "399", "respond", "588" )' aria-label='Reply to matt'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-400">
		<article id="comment-400" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5c7f0e534a86b450fdf5c038e3b80ddf?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Kidnznet</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-400"><time pubdate datetime="2014-06-03T10:51:19+00:00">June 3, 2014 at 10:51 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Well, the first Swift code sample I have seen on the net. Already added your posts on my Swift learning page:<br />
<a href="http://www.iphonetransferrecovery.com/Swift/free-ebooks.html" rel="nofollow">http://www.iphonetransferrecovery.com/Swift/free-ebooks.html</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=400#respond' onclick='return addComment.moveForm( "comment-400", "400", "respond", "588" )' aria-label='Reply to Kidnznet'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-409">
		<article id="comment-409" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-409"><time pubdate datetime="2014-06-03T11:26:59+00:00">June 3, 2014 at 11:26 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Excellent, thank you!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=409#respond' onclick='return addComment.moveForm( "comment-409", "409", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-419">
		<article id="comment-419" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/52b549e0b09e5478481d2bc48e3b58b8?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Mike</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-419"><time pubdate datetime="2014-06-03T15:10:50+00:00">June 3, 2014 at 3:10 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I followed along but where I ran into trouble was I made a data class and then in my View Controller I made a couple instances of that data class and tried storing those instances in an array so I could then fill my views rows by looping through the array. </p>
<p>I get an error when I try storing the instances in an array have you tried this yet or know if its possible in swift? Seems like when I create my instances then try to store them in the array it doesn&#8217;t know they exist yet.</p>
<p>Thanks for the great tutorial!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=419#respond' onclick='return addComment.moveForm( "comment-419", "419", "respond", "588" )' aria-label='Reply to Mike'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-423">
		<article id="comment-423" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-423"><time pubdate datetime="2014-06-03T16:15:21+00:00">June 3, 2014 at 4:15 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Can you post a Gist of your code? I would be happy to look at it and see what&#8217;s up.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=423#respond' onclick='return addComment.moveForm( "comment-423", "423", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-424">
		<article id="comment-424" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/52b549e0b09e5478481d2bc48e3b58b8?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Mike</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-424"><time pubdate datetime="2014-06-03T16:35:17+00:00">June 3, 2014 at 4:35 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Just got it to work! Thanks for the offer though.</p>
<p>I just broke my code up into a couple functions and then called them in the vieDidLoad and it seemed to take care of whatever the complier didn&#8217;t like.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=424#respond' onclick='return addComment.moveForm( "comment-424", "424", "respond", "588" )' aria-label='Reply to Mike'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-4" id="li-comment-425">
		<article id="comment-425" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-425"><time pubdate datetime="2014-06-03T16:39:14+00:00">June 3, 2014 at 4:39 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Awesome!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=425#respond' onclick='return addComment.moveForm( "comment-425", "425", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-420">
		<article id="comment-420" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/3d23d324ea3077a0310664227eee6de0?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Peter</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-420"><time pubdate datetime="2014-06-03T15:25:28+00:00">June 3, 2014 at 3:25 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Just for this quick and easy intro to Swift.<br />
However I&#8217;m having performance issues. When querying for &#8220;Disney&#8221; I&#8217;m getting a tableview of about 30 rows or so. But when scrolling the performance is just terrible. Slow. Could it be because of the images?<br />
Btw it happens both on my mac using simulator (iOS8) and on my iPhone 5 running iOS7</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=420#respond' onclick='return addComment.moveForm( "comment-420", "420", "respond", "588" )' aria-label='Reply to Peter'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-422">
		<article id="comment-422" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-422"><time pubdate datetime="2014-06-03T16:14:40+00:00">June 3, 2014 at 4:14 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Yep you would want to ideally have caching of images and asynch loading. This demo intentionally cut all that out to keep things very simple. I&#8217;m working on the async right now for Part 5.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=422#respond' onclick='return addComment.moveForm( "comment-422", "422", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-431">
		<article id="comment-431" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/46b6a81d545b67ea61cb16047911e4e8?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://iphonesdksolutions.blogspot.com/' rel='external nofollow' class='url'>Mohammed Elsammak</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-431"><time pubdate datetime="2014-06-04T02:56:27+00:00">June 4, 2014 at 2:56 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I think we can replace this part</p>
<p>// Download an NSData representation of the image at the URL<br />
   var imgData: NSData = NSData(contentsOfURL: imgURL)<br />
   cell.image = UIImage(data: imgData)</p>
<p>with another one that using threads or downloading images in the background. I think the previous code will wait till all images loaded first.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=431#respond' onclick='return addComment.moveForm( "comment-431", "431", "respond", "588" )' aria-label='Reply to Mohammed Elsammak'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-437">
		<article id="comment-437" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-437"><time pubdate datetime="2014-06-04T08:48:38+00:00">June 4, 2014 at 8:48 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>It will, it&#8217;s not an efficient way to do it. It&#8217;s something that&#8217;s replaced in the upcoming part 5.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=437#respond' onclick='return addComment.moveForm( "comment-437", "437", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-447">
		<article id="comment-447" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/30813ce9b92c6b50ef3310b36c3a0722?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Tiago Maia</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-447"><time pubdate datetime="2014-06-04T11:52:33+00:00">June 4, 2014 at 11:52 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I had a strange problem. I&#8217;m doing everything programmatically(i think that this way i can learn more) and my cellForRowAtIndexPath is not being called! &#8216;oO&#8217;<br />
Even setting my delegates and datasource protocols and related methods, this method not get called&#8230; The strange thing is that my numberOfRowsInSection is called(first when we load the view and add the tableView as a subview, and than later, when i reload my tableview&#8217;s data once my request is finished). It is very strange&#8230; Here is a gist of my mainController that is being called as a rootVC in the window setted in my AppDelegate.swift :<br />
 <a href="https://gist.github.com/TiagoMaiaL/f95910d19d3ee1bebfc3" rel="nofollow">https://gist.github.com/TiagoMaiaL/f95910d19d3ee1bebfc3</a></p>
<p>I used to make Lazy load in my setters(in fact, i made this in my swift code too), but i&#8217;m a bit confused, because now we have a keyWord called @lazy for this things.</p>
<p>Thanks!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=447#respond' onclick='return addComment.moveForm( "comment-447", "447", "respond", "588" )' aria-label='Reply to Tiago Maia'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-449">
		<article id="comment-449" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-449"><time pubdate datetime="2014-06-04T12:03:49+00:00">June 4, 2014 at 12:03 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Tiago, this means probably one of two things:<br />
1) Your tabledata has 0 rows for some reason<br />
2) Your method signature does not match the expected method signature for the table view delegate/datasource</p>
<p>But it&#8217;s probably #1</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=449#respond' onclick='return addComment.moveForm( "comment-449", "449", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-450">
		<article id="comment-450" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/30813ce9b92c6b50ef3310b36c3a0722?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Tiago Maia</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-450"><time pubdate datetime="2014-06-04T12:25:15+00:00">June 4, 2014 at 12:25 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I thought that it was one of these erros.<br />
After the request is finished, my array has 4 items. But when i call reload data, it does not call cellForRowAtIndexPath&#8230;<br />
I had keep track of the states in this variables in each time. In relation to my method signature, it is correct, as i change that and the compiler shows me the error that my delegate is not implemented&#8230;</p>
<p>Thanks for the quick answer!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=450#respond' onclick='return addComment.moveForm( "comment-450", "450", "respond", "588" )' aria-label='Reply to Tiago Maia'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even depth-3" id="li-comment-673">
		<article id="comment-673" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/c5ada5b919d24e3c6a4fb266330a9a2c?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Graham Ballantyne</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-673"><time pubdate datetime="2014-06-13T16:01:10+00:00">June 13, 2014 at 4:01 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I have the same problem. I can see that results are coming back, but tableView(tableView: cellForRowAtIndexPath:) isn&#8217;t being called at all. I&#8217;ve done a copy/paste from your gist and all I&#8217;m getting is a blank table view.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=673#respond' onclick='return addComment.moveForm( "comment-673", "673", "respond", "588" )' aria-label='Reply to Graham Ballantyne'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-4" id="li-comment-674">
		<article id="comment-674" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-674"><time pubdate datetime="2014-06-13T17:26:47+00:00">June 13, 2014 at 5:26 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>The only reason that wouldn&#8217;t call is the delegate &#038; dataSource of the tableview isnt set to self. In the storyboard file, click on the table view and go to the very last tab of the panes on the right-hand-side. It&#8217;ll show if delegate &#038; dataSource are set.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=674#respond' onclick='return addComment.moveForm( "comment-674", "674", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-451">
		<article id="comment-451" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/0ed578714721986f3b94f36046e9d79d?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://twitter.com/hfuecks' rel='external nofollow' class='url'>Harry Fuecks</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-451"><time pubdate datetime="2014-06-04T12:33:20+00:00">June 4, 2014 at 12:33 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>&gt; Now by control+click+dragging from the Table View to our ‘View Controller’ object, we’ve linked these objects. Easy, right?</p>
<p>You meant the opposite right?  Something like &#8220;control+click+drag from our View Controller to our Table View&#8221; &#8211; that pops up a dialog to select the appTableView property</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=451#respond' onclick='return addComment.moveForm( "comment-451", "451", "respond", "588" )' aria-label='Reply to Harry Fuecks'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-452">
		<article id="comment-452" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-452"><time pubdate datetime="2014-06-04T12:38:46+00:00">June 4, 2014 at 12:38 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>It works either way around.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=452#respond' onclick='return addComment.moveForm( "comment-452", "452", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-468">
		<article id="comment-468" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5b8c5dc06249b26f39da521cab77efd5?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">pbreit</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-468"><time pubdate datetime="2014-06-04T19:08:38+00:00">June 4, 2014 at 7:08 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Only worked for me dragging from ViewController object to TableView.</p>
<p>As a newbie to iOS programming, the fact that you can name multiple functions the same was odd to me. Maybe a quick explanation?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=468#respond' onclick='return addComment.moveForm( "comment-468", "468", "respond", "588" )' aria-label='Reply to pbreit'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-4" id="li-comment-469">
		<article id="comment-469" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-469"><time pubdate datetime="2014-06-04T19:14:28+00:00">June 4, 2014 at 7:14 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>You can&#8217;t name multiple Obj-C functions the same, but the &#8220;name&#8221; is defined by the method signature. In objective-c if you have a method like this:<br />
&#8211; (void) myMethodName:(int)myFirstParameter withASecondParameter:(int)mySecondParameter;<br />
Then the method name in Swift is &#8220;myMethodName(&#8230;)&#8221;, so for this reason you may see what seems to be methods with the same names doing different things, but that&#8217;s because under the hood, the named parameters in Swift are part of the method signature in Obj-C:<br />
&#8220;myMethodName: withASecondParameter:&#8221;</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=469#respond' onclick='return addComment.moveForm( "comment-469", "469", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even depth-3" id="li-comment-592">
		<article id="comment-592" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d3ae56340da1bf4dcab15a3f960821ce?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Colin</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-592"><time pubdate datetime="2014-06-09T23:21:52+00:00">June 9, 2014 at 11:21 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I had same issue.  Only worked from View Controller to table View.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=592#respond' onclick='return addComment.moveForm( "comment-592", "592", "respond", "588" )' aria-label='Reply to Colin'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-4" id="li-comment-593">
		<article id="comment-593" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-593"><time pubdate datetime="2014-06-09T23:23:31+00:00">June 9, 2014 at 11:23 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Would you mind posting about this at <a href="http://jamesonquave.com/forum/" rel="nofollow">http://jamesonquave.com/forum/</a>?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=593#respond' onclick='return addComment.moveForm( "comment-593", "593", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-472">
		<article id="comment-472" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/faedc01ca334ffdbd2360641cb44603f?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Blaz</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-472"><time pubdate datetime="2014-06-05T00:19:29+00:00">June 5, 2014 at 12:19 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi,</p>
<p>first I want to thank you for this tutorials!!! Now the question. Why in connectionDidFinishLoading you use data instead of self.data?</p>
<p>var jsonResult: NSDictionary = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: nil) as NSDictionary</p>
<p>Im a newbie in IOS <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=472#respond' onclick='return addComment.moveForm( "comment-472", "472", "respond", "588" )' aria-label='Reply to Blaz'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-483">
		<article id="comment-483" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-483"><time pubdate datetime="2014-06-05T11:15:15+00:00">June 5, 2014 at 11:15 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I don&#8217;t have a good reason, I&#8217;m surprised that works actually. I guess it knows to check for self.data</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=483#respond' onclick='return addComment.moveForm( "comment-483", "483", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-490">
		<article id="comment-490" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/6e2509d6bf27a5823566c345b7aa5649?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://katharine.org' rel='external nofollow' class='url'>kvanderd</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-490"><time pubdate datetime="2014-06-05T20:38:26+00:00">June 5, 2014 at 8:38 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thank you for putting the time into these tutorials, they have been a great help.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=490#respond' onclick='return addComment.moveForm( "comment-490", "490", "respond", "588" )' aria-label='Reply to kvanderd'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-511">
		<article id="comment-511" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/203e9866d703caef789762a507cb3cc3?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">John</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-511"><time pubdate datetime="2014-06-06T14:49:00+00:00">June 6, 2014 at 2:49 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi,</p>
<p>I&#8217;m doing your tutorial and it is working. Now I&#8217;m trying to adapt it to my project.<br />
Is there a simple way to parse a Json using swift ?<br />
I have a json like:<br />
{<br />
    &#8220;title&#8221;: &#8220;Train speed&#8221;,<br />
    &#8220;description&#8221;: &#8220;speed&#8221;,<br />
    &#8220;images&#8221;: [<br />
        {<br />
            &#8220;position&#8221;: 1,<br />
            &#8220;item&#8221;: [<br />
                {<br />
                    &#8220;url&#8221;: &#8220;myurl_1&#8243;,<br />
                    &#8220;width&#8221;: 640,<br />
                    &#8220;height&#8221;: 359<br />
                },<br />
                {<br />
                    &#8220;size&#8221;: &#8220;L&#8221;,<br />
                    &#8220;url&#8221;: &#8220;myurl_2&#8243;,<br />
                    &#8220;width&#8221;: 320,<br />
                    &#8220;height&#8221;: 179<br />
                },<br />
                {<br />
                    &#8220;size&#8221;: &#8220;M&#8221;,<br />
                    &#8220;url&#8221;: &#8220;myurl_3&#8243;,<br />
                    &#8220;width&#8221;: 160,<br />
                    &#8220;height&#8221;: 89<br />
                },<br />
                {<br />
                    &#8220;size&#8221;: &#8220;M&#8221;,<br />
                    &#8220;url&#8221;: &#8220;myurl_4&#8243;,<br />
                    &#8220;width&#8221;: 160,<br />
                    &#8220;height&#8221;: 89<br />
                }<br />
            ]<br />
        }<br />
    ]<br />
}</p>
<p>For the moment I managed to parse it using loop inside loop and loop again.<br />
Here is what I did:<br />
if let element = rowData[&#8220;images&#8221;]{<br />
            var rowDataImg: NSDictionary = element[0] as NSDictionary<br />
            if let element1 = rowDataImg[&#8220;item&#8221;]{<br />
                var rowImgUrl: NSDictionary = element1[0] as NSDictionary<br />
                var urlString: NSString = rowImgUrl[&#8220;url&#8221;] as String<br />
                var imgURL: NSURL = NSURL(string: urlString)<br />
               var imgData: NSData = NSData(contentsOfURL: imgURL)<br />
                cell.image = UIImage(data: imgData)<br />
            }<br />
}</p>
<p>Thanks.</p>
<p>JM.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=511#respond' onclick='return addComment.moveForm( "comment-511", "511", "respond", "588" )' aria-label='Reply to John'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-512">
		<article id="comment-512" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-512"><time pubdate datetime="2014-06-06T14:53:09+00:00">June 6, 2014 at 2:53 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>var deserializedJSON: NSDictionary = NSJSONSerialization.JSONObjectWithData([myJsonString.dataUsingEncoding(NSUTF8StringEncoding)], options: NSJSONReadingOptions.MutableContainers, error: nil) as NSDictionary</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=512#respond' onclick='return addComment.moveForm( "comment-512", "512", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-513">
		<article id="comment-513" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/203e9866d703caef789762a507cb3cc3?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">John</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-513"><time pubdate datetime="2014-06-06T14:56:12+00:00">June 6, 2014 at 2:56 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks for the answer.<br />
I&#8217;m a beginner in iOs App (I&#8217;m a java developper actually) .<br />
Can you please show me how to get the value (for instance) of the &#8220;url&#8221; attribute? Can I use something like a xpath ?<br />
I&#8217;m used to groovy where you just do something like  deserializedJSON.att1.att2.att3 ..</p>
<p>Thanks.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=513#respond' onclick='return addComment.moveForm( "comment-513", "513", "respond", "588" )' aria-label='Reply to John'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-516">
		<article id="comment-516" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-516"><time pubdate datetime="2014-06-06T15:43:08+00:00">June 6, 2014 at 3:43 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Try this:<br />
var images: NSArray = deserializedJSON[&#8220;images&#8221;] as NSArray<br />
var items: NSArray = images[“item”] as NSArray<br />
var firstItem: NSDictionary = items[0] as NSDictionary<br />
var url: String = firstItem[“url”] as String</p>
<p>The main issue here is that the JSON is being deserialized in to Obj-C types, NSDictionary and NSArray. If it were a pure Swift object it would be much better, but that API doesn&#8217;t seem to exist yet. Maybe I&#8217;ll write it.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=516#respond' onclick='return addComment.moveForm( "comment-516", "516", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-536">
		<article id="comment-536" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/203e9866d703caef789762a507cb3cc3?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">John</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-536"><time pubdate datetime="2014-06-07T09:31:51+00:00">June 7, 2014 at 9:31 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I tried but it does not work.<br />
It fails at:</p>
<p>                var items: NSArray = images[&#8220;items&#8221;]  as NSArray</p>
<p>with the message: Cannot convert the expression&#8217;s type NSArray to type StringLiteralConvertible.</p>
<p>Any idea?<br />
I&#8217;ve tried some stuff but I cannot get the thing working.</p>
<p>Thanks.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=536#respond' onclick='return addComment.moveForm( "comment-536", "536", "respond", "588" )' aria-label='Reply to John'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-4" id="li-comment-1725">
		<article id="comment-1725" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/31f4c794951ee056fdd79d04fab254d7?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Tom</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1725"><time pubdate datetime="2014-07-26T12:44:02+00:00">July 26, 2014 at 12:44 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I am having a very similar problem, getting these two errors:</p>
<p>var rowData: NSDictionary = self.tableData[indexPath.row] as NSDictionary &lt;-&#039;NSArray&#039; is not convertible to &#039;NSDictionary&#039;</p>
<p>and </p>
<p>self.tableData = results &lt;- &#039;AnyObject&#039; is not identical to &#039;NSArray&#039;</p>
<p>Any ideas as to why?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1725#respond' onclick='return addComment.moveForm( "comment-1725", "1725", "respond", "588" )' aria-label='Reply to Tom'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-5" id="li-comment-1727">
		<article id="comment-1727" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1727"><time pubdate datetime="2014-07-26T17:58:29+00:00">July 26, 2014 at 5:58 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi Tom, there were some issues caused by Xcode updates that have been fixed (just now) up until Part 4. Sorry about that.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1727#respond' onclick='return addComment.moveForm( "comment-1727", "1727", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-596">
		<article id="comment-596" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/7a3681e4c1e30926ce9a2d54da155ebd?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://www.jawiths.in' rel='external nofollow' class='url'>Jawith</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-596"><time pubdate datetime="2014-06-10T03:40:41+00:00">June 10, 2014 at 3:40 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi Jameson,</p>
<p>I have tried with tutorial which you have sent, but one problem i&#8217;m facing is &#8220;fatal error: Can&#8217;t unwrap Optional.None&#8221;, this error is raising on the self.appsTableView.reloadData()&#8230;&#8230;</p>
<p>Please help me regarding this to move forward<br />
TAI</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=596#respond' onclick='return addComment.moveForm( "comment-596", "596", "respond", "588" )' aria-label='Reply to Jawith'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-604">
		<article id="comment-604" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-604"><time pubdate datetime="2014-06-10T11:19:24+00:00">June 10, 2014 at 11:19 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Jawith, make sure you have your appsTableView set up as an IBOutlet, and that it&#8217;s connected in your storyboard to the Table View.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=604#respond' onclick='return addComment.moveForm( "comment-604", "604", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-616">
		<article id="comment-616" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/62e52f3103f8e37f09e64f84666e9752?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://wadecantley.com' rel='external nofollow' class='url'>Wade Cantley</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-616"><time pubdate datetime="2014-06-10T22:58:46+00:00">June 10, 2014 at 10:58 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>This is a great tutorial and I am really enjoying it however, I noticed that you&#8217;re not using the baked in inference that helps make this language so light.  Any particular reason?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=616#respond' onclick='return addComment.moveForm( "comment-616", "616", "respond", "588" )' aria-label='Reply to Wade Cantley'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-624">
		<article id="comment-624" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-624"><time pubdate datetime="2014-06-11T11:57:14+00:00">June 11, 2014 at 11:57 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I start using it more later in the series. The only reason I&#8217;m doing it in the beginning is because I&#8217;m used to it. I would go back and remove it, but I also think it helps explain what&#8217;s happening under the hood a bit.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=624#respond' onclick='return addComment.moveForm( "comment-624", "624", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-665">
		<article id="comment-665" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/3de81b53499ee02a55d87143df131a1e?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://none' rel='external nofollow' class='url'>Phong</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-665"><time pubdate datetime="2014-06-13T12:38:24+00:00">June 13, 2014 at 12:38 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Is part 2 in github by chance? I&#8217;m getting an error in connectionDidFinishLoading but am also noticing that connection(didRecieveResponse) and connection(didRecieveData) are not being triggered. URL seems good so my delegate connection must be broken somewhere.</p>
<p>Thanks!<br />
Phong</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=665#respond' onclick='return addComment.moveForm( "comment-665", "665", "respond", "588" )' aria-label='Reply to Phong'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-667">
		<article id="comment-667" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-667"><time pubdate datetime="2014-06-13T12:42:55+00:00">June 13, 2014 at 12:42 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>The github commits start at part 3: <a href="https://github.com/jquave/Swift-Tutorial/tree/Part3" rel="nofollow">https://github.com/jquave/Swift-Tutorial/tree/Part3</a><br />
But, you can find the offending line and compare with your own. One thing to note is that the delegate/protocol pattern is dropped later in this tutorial in favor of a different networking method that uses callbacks.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=667#respond' onclick='return addComment.moveForm( "comment-667", "667", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-712">
		<article id="comment-712" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/ce0ff2f70c48dd305c4d9ad51082d4e3?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Frank Yellin</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-712"><time pubdate datetime="2014-06-16T01:27:02+00:00">June 16, 2014 at 1:27 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Minor nit, but it may also have an unexpected consequence.</p>
<p>You are systematically misspelling &#8220;receive&#8221; as &#8220;recieve,&#8221; except in the one case where it really matters. Normally, I wouldn&#8217;t care, but you have a callback function:  </p>
<p>     func connection(connection: NSURLConnection,<br />
            didRecieveResponse response: NSURLResponse)  {<br />
        println(&#8220;Recieved response&#8221;)<br />
    }</p>
<p>Is this function just never going to be called, because it is misnamed?  What will happen if the system really does want to call this method and it finds this misnamed method?  Is it just ignored?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=712#respond' onclick='return addComment.moveForm( "comment-712", "712", "respond", "588" )' aria-label='Reply to Frank Yellin'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-715">
		<article id="comment-715" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-715"><time pubdate datetime="2014-06-16T07:45:48+00:00">June 16, 2014 at 7:45 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Yes it would be ignored. That callback method is optional, so it&#8217;ll just be skipped. I corrected the misspellings in the tutorial.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=715#respond' onclick='return addComment.moveForm( "comment-715", "715", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-732">
		<article id="comment-732" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/f276024d66c5f77d3498f1619a971177?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">SR</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-732"><time pubdate datetime="2014-06-17T06:23:54+00:00">June 17, 2014 at 6:23 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hey great tutorial!</p>
<p>There&#8217;s one line in your searchItunesFor function that puzzles me:<br />
    var results: NSArray = jsonResult[&#8220;results&#8221;] as NSArray</p>
<p>I&#8217;m wondering: where did you get the argument name [&#8220;results&#8221;] ?  Meaning how did you know to use that name and not some other name? And are there other names or values that can be used there?</p>
<p>thanks!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=732#respond' onclick='return addComment.moveForm( "comment-732", "732", "respond", "588" )' aria-label='Reply to SR'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-733">
		<article id="comment-733" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/f276024d66c5f77d3498f1619a971177?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">SR</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-733"><time pubdate datetime="2014-06-17T06:55:23+00:00">June 17, 2014 at 6:55 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>actually, I can answer my own question here <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /></p>
<p>&#8220;results&#8221; comes directly from the iTunes Search API itself: that&#8217;s the word they use for returned JSON results. So it comes from Apple. All I had to do was look that up&#8230;</p>
<p>thanks anyway &#8211; keep up the good work!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=733#respond' onclick='return addComment.moveForm( "comment-733", "733", "respond", "588" )' aria-label='Reply to SR'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-3" id="li-comment-738">
		<article id="comment-738" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-738"><time pubdate datetime="2014-06-17T09:02:30+00:00">June 17, 2014 at 9:02 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Yep, usually I just println(whateverJSONIGetBack) and take a look at what I want to include.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=738#respond' onclick='return addComment.moveForm( "comment-738", "738", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-746">
		<article id="comment-746" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/c8b028adca33a98f60673516ddd326a9?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://gamehojo.blogspot.com' rel='external nofollow' class='url'>prashant</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-746"><time pubdate datetime="2014-06-17T13:19:32+00:00">June 17, 2014 at 1:19 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>thanks for this tute</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=746#respond' onclick='return addComment.moveForm( "comment-746", "746", "respond", "588" )' aria-label='Reply to prashant'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-840">
		<article id="comment-840" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/6015b13e3f7e9d843e5b9e178dfe6a4e?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Vinny</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-840"><time pubdate datetime="2014-06-22T00:05:08+00:00">June 22, 2014 at 12:05 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;m trying to use this code as a base for accessing another JSON API, but whenever I change the URL and try to run it I get an EXC_BAD_INSTRUCTION error on the line &#8221;             println(error.localizedDescription)&#8221; If I try to comment out that line, I get errors pretty much all the way up. Would this code only work for this particular API or am I just doing something wrong?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=840#respond' onclick='return addComment.moveForm( "comment-840", "840", "respond", "588" )' aria-label='Reply to Vinny'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-850">
		<article id="comment-850" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-850"><time pubdate datetime="2014-06-22T18:07:44+00:00">June 22, 2014 at 6:07 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>It should work the same with any API, I&#8217;m going to say there&#8217;s probably a different issue. I&#8217;m guessing you need to modify the way it&#8217;s deserialized a bit due to a difference in the way the data is structured.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=850#respond' onclick='return addComment.moveForm( "comment-850", "850", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-938">
		<article id="comment-938" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/ca742f656e208bb2811c89767afb27f1?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">JunAalan</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-938"><time pubdate datetime="2014-06-26T23:45:47+00:00">June 26, 2014 at 11:45 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Good,Of great help to me.Thank you!Jameson Quave</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=938#respond' onclick='return addComment.moveForm( "comment-938", "938", "respond", "588" )' aria-label='Reply to JunAalan'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1256">
		<article id="comment-1256" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/02fc7628dba5d30d418a09b052f1349c?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Jonathan Adams</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1256"><time pubdate datetime="2014-07-07T21:01:18+00:00">July 7, 2014 at 9:01 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Great Tutorial!! I do have one question though. How would I go about connecting to a url that required username/password authentication? Thanks!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1256#respond' onclick='return addComment.moveForm( "comment-1256", "1256", "respond", "588" )' aria-label='Reply to Jonathan Adams'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1257">
		<article id="comment-1257" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/681e11e299f00a06ff29ca1eb331a6df?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://nil' rel='external nofollow' class='url'>ash</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1257"><time pubdate datetime="2014-07-07T23:29:17+00:00">July 7, 2014 at 11:29 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>i see in beta 3 cell.text is deprecated what is the correct replacement</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1257#respond' onclick='return addComment.moveForm( "comment-1257", "1257", "respond", "588" )' aria-label='Reply to ash'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-1258">
		<article id="comment-1258" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/681e11e299f00a06ff29ca1eb331a6df?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://nil' rel='external nofollow' class='url'>ash</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1258"><time pubdate datetime="2014-07-07T23:31:57+00:00">July 7, 2014 at 11:31 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>answered my own question&#8230;</p>
<p>should be using</p>
<p>cell.textLabel.text</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1258#respond' onclick='return addComment.moveForm( "comment-1258", "1258", "respond", "588" )' aria-label='Reply to ash'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1318">
		<article id="comment-1318" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/37938133d76e8180ebec3b585cc09cfc?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Steve Bolton</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1318"><time pubdate datetime="2014-07-10T03:33:16+00:00">July 10, 2014 at 3:33 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Doesn&#8217;t compile on xCode 6 Beta 3.</p>
<p>cell.text -&gt; cell.textLabel.text</p>
<p>Not sure what to do with cell.image though &#8211; I find it difficult to see what to do with deprecations, in java we usually get a comment with a clue as to what has replaced the deprecation</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1318#respond' onclick='return addComment.moveForm( "comment-1318", "1318", "respond", "588" )' aria-label='Reply to Steve Bolton'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-1405">
		<article id="comment-1405" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/a3d36220fc5451b15af32e6393dd57b9?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Josh P</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1405"><time pubdate datetime="2014-07-13T03:10:39+00:00">July 13, 2014 at 3:10 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Just left a comment, but change:</p>
<p>cell.image = UIImage(data: imgData)<br />
to<br />
cell.imageView.image = UIImage(data: imgData)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1405#respond' onclick='return addComment.moveForm( "comment-1405", "1405", "respond", "588" )' aria-label='Reply to Josh P'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1404">
		<article id="comment-1404" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/a3d36220fc5451b15af32e6393dd57b9?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Josh P</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-1404"><time pubdate datetime="2014-07-13T03:09:14+00:00">July 13, 2014 at 3:09 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>In the latest Xcode6-Beta3, you won&#8217;t be able to run your program (due to deprecation errors) until you change the following:</p>
<p>From:<br />
cell.image = UIImage(data: imgData)</p>
<p>To:<br />
cell.imageView.image = UIImage(data: imgData)</p>
<p>AND</p>
<p>From:<br />
cell.text = rowData[&#8220;trackName&#8221;] as String</p>
<p>To:<br />
cell.textLabel.text = rowData[&#8220;trackName&#8221;] as String</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=1404#respond' onclick='return addComment.moveForm( "comment-1404", "1404", "respond", "588" )' aria-label='Reply to Josh P'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2290">
		<article id="comment-2290" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/72fed696e67b00b5f49df7c70f60f74d?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Tyler</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-2290"><time pubdate datetime="2014-08-04T21:07:17+00:00">August 4, 2014 at 9:07 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hey, I&#8217;m new to Swift and trying to follow your tutorial.  I&#8217;m using xcode 6 &#8211; beta 5 and im getting a compile error for the line after jsonResult</p>
<p>if (err?)</p>
<p>Type NSError? does not conform to protocol &#8216;BooleanType.Protocol</p>
<p>and in the console</p>
<p>fatal error: unexpectedly found nil while unwrapping an Optional value</p>
<p>This is likely an error on my part, just wondering if anybody else could reproduce it. Thanks for the tutorial</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=2290#respond' onclick='return addComment.moveForm( "comment-2290", "2290", "respond", "588" )' aria-label='Reply to Tyler'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-2301">
		<article id="comment-2301" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-2301"><time pubdate datetime="2014-08-04T22:20:29+00:00">August 4, 2014 at 10:20 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi Tyler, the line that says if(err?) needs to change.</p>
<p>Now it should say:<br />
if(err != nil)</p>
<p>The tutorial has now been completely updated to support Beta 5 since you posted this message <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=2301#respond' onclick='return addComment.moveForm( "comment-2301", "2301", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2368">
		<article id="comment-2368" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/72fed696e67b00b5f49df7c70f60f74d?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Tyler</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-2368"><time pubdate datetime="2014-08-05T11:32:32+00:00">August 5, 2014 at 11:32 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Works perfectly.  Thanks for the quick turnaround.  Really appreciate it</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=2368#respond' onclick='return addComment.moveForm( "comment-2368", "2368", "respond", "588" )' aria-label='Reply to Tyler'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-2404">
		<article id="comment-2404" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/45dc8222b713f69454dfb96b00192980?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Serena</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-2404"><time pubdate datetime="2014-08-05T17:32:00+00:00">August 5, 2014 at 5:32 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>My build is apparently successful but my table is blank. I checked that my view controller is connected to my delegate and datasource. Any idea what Could be going on here? Would have anything to do with me using Xcode Beta 2?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=2404#respond' onclick='return addComment.moveForm( "comment-2404", "2404", "respond", "588" )' aria-label='Reply to Serena'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-2482">
		<article id="comment-2482" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-2482"><time pubdate datetime="2014-08-06T09:25:10+00:00">August 6, 2014 at 9:25 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>The issue is possibly your Xcode version. I would at least upgrade to Beta 5 to check.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=2482#respond' onclick='return addComment.moveForm( "comment-2482", "2482", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-5465">
		<article id="comment-5465" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/0c1f71195c1ca27d9fca3226d964d34e?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">John</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5465"><time pubdate datetime="2014-08-21T03:16:28+00:00">August 21, 2014 at 3:16 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;m getting this error: The operation couldn’t be completed. (NSURLErrorDomain error -1002.)<br />
It&#8217;s getting thrown here:<br />
if((error) != nil) {<br />
                // If there is an error in the web request, print it to the console<br />
                println(error.localizedDescription)<br />
            }</p>
<p>I&#8217;m using Xcode 6 beta 6</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5465#respond' onclick='return addComment.moveForm( "comment-5465", "5465", "respond", "588" )' aria-label='Reply to John'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-5757">
		<article id="comment-5757" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5757"><time pubdate datetime="2014-08-22T02:20:30+00:00">August 22, 2014 at 2:20 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>This was caused by beta 6 indeed, the tutorial has now been updated and this issue is resolved <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5757#respond' onclick='return addComment.moveForm( "comment-5757", "5757", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-5633">
		<article id="comment-5633" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/8cb027e9a42261ea75484ad1e703e15a?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Mike</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5633"><time pubdate datetime="2014-08-21T16:30:52+00:00">August 21, 2014 at 4:30 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks for making these guides!</p>
<p>I ran into some troubles running the code :</p>
<p>&#8220;Task completed<br />
The operation couldn’t be completed. (NSURLErrorDomain error -1002.)<br />
fatal error: unexpectedly found nil while unwrapping an Optional value&#8221;</p>
<p>failing on line :<br />
var jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &amp;err) as NSDictionary</p>
<p>Im using beta6</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5633#respond' onclick='return addComment.moveForm( "comment-5633", "5633", "respond", "588" )' aria-label='Reply to Mike'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-5754">
		<article id="comment-5754" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5754"><time pubdate datetime="2014-08-22T02:19:48+00:00">August 22, 2014 at 2:19 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>This issue is caused by a change to optionals in beta 6. I&#8217;ve updated my tutorial since you posted this, so it should all now work.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5754#respond' onclick='return addComment.moveForm( "comment-5754", "5754", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-5766">
		<article id="comment-5766" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/8cb027e9a42261ea75484ad1e703e15a?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Mike</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5766"><time pubdate datetime="2014-08-22T03:20:19+00:00">August 22, 2014 at 3:20 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>thank you!! Could I ask for a more detailed explanation of the cause/solution by any chance? <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5766#respond' onclick='return addComment.moveForm( "comment-5766", "5766", "respond", "588" )' aria-label='Reply to Mike'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-5634">
		<article id="comment-5634" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/88c1a55ebc991a99c64c5b68726faf76?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://gopack.com' rel='external nofollow' class='url'>Rod HRodneyRodneyradsfsdfrodasdfasdfadsfasdfasdRod</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5634"><time pubdate datetime="2014-08-21T16:32:56+00:00">August 21, 2014 at 4:32 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Just upgraded to Xcode 6 beta 6.  When I run this tutorial (part 2) as described above, I get &#8220;The operation couldn’t be completed. (NSURLErrorDomain error -1002.)<br />
fatal error: unexpectedly found nil while unwrapping an Optional value&#8221;</p>
<p>If I modify the URLPath and put something in like:<br />
let urlPath = &#8220;https://itunes.apple.com/search?term=apple&amp;media=software&#8221;     </p>
<p>Then it works fine.  Is it possible that beta 6 might have changed something and now your original code is returning an empty set from iTunes?</p>
<p>All the xcode beta (breaking) changes almost make noobs like myself want to wait until it&#8217;s finally released&#8230;almost&#8230;  <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5634#respond' onclick='return addComment.moveForm( "comment-5634", "5634", "respond", "588" )' aria-label='Reply to Rod HRodneyRodneyradsfsdfrodasdfasdfadsfasdfasdRod'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-5753">
		<article id="comment-5753" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-5753"><time pubdate datetime="2014-08-22T02:19:22+00:00">August 22, 2014 at 2:19 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Heya! Yeah they made some more breaking changes in beta 6, I&#8217;ve updated my tutorial since then so it should all now be up to date <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=5753#respond' onclick='return addComment.moveForm( "comment-5753", "5753", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-7451">
		<article id="comment-7451" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/9661543e278d4948bf66f50a3c06db52?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Ben Hill</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-7451"><time pubdate datetime="2014-08-29T16:25:53+00:00">August 29, 2014 at 4:25 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I see above that you fixed the code for Beta6, but I am running beta 6 (6A280e) and I keep getting&#8230;</p>
<p>The operation couldn’t be completed. (NSURLErrorDomain error -1005.)<br />
fatal error: unexpectedly found nil while unwrapping an Optional value</p>
<p>at&#8230;</p>
<p>var jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &amp;err) as NSDictionary</p>
<p>I even checked out your github repo to verify it wasn&#8217;t my coding mistake.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=7451#respond' onclick='return addComment.moveForm( "comment-7451", "7451", "respond", "588" )' aria-label='Reply to Ben Hill'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-7455">
		<article id="comment-7455" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/9661543e278d4948bf66f50a3c06db52?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Ben Hill</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-7455"><time pubdate datetime="2014-08-29T16:32:29+00:00">August 29, 2014 at 4:32 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Ah, needed to make it &#8220;https://&#8221;. That fixed it.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=7455#respond' onclick='return addComment.moveForm( "comment-7455", "7455", "respond", "588" )' aria-label='Reply to Ben Hill'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-14030">
		<article id="comment-14030" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/0e8ab03fa3d7df29c90a950f069aad62?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">chrisfinne</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-14030"><time pubdate datetime="2014-09-28T23:33:50+00:00">September 28, 2014 at 11:33 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>You mention a method didReceiveAPIResults a couple times, but that is not in the code samples.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=14030#respond' onclick='return addComment.moveForm( "comment-14030", "14030", "respond", "588" )' aria-label='Reply to chrisfinne'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-14034">
		<article id="comment-14034" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-14034"><time pubdate datetime="2014-09-29T00:27:01+00:00">September 29, 2014 at 12:27 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Not sure why this isn&#8217;t included, but you can see the code here: <a href="https://github.com/jquave/Swift-Tutorial/blob/Part3/MusicPlayer/APIController.swift" rel="nofollow">https://github.com/jquave/Swift-Tutorial/blob/Part3/MusicPlayer/APIController.swift</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=14034#respond' onclick='return addComment.moveForm( "comment-14034", "14034", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-21555">
		<article id="comment-21555" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/95eabaacd3c04627f299562dd0670179?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">mohadd</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-21555"><time pubdate datetime="2014-10-28T06:26:06+00:00">October 28, 2014 at 6:26 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>hi<br />
the swift is a compilery language or a Interpreter language?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=21555#respond' onclick='return addComment.moveForm( "comment-21555", "21555", "respond", "588" )' aria-label='Reply to mohadd'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-23513">
		<article id="comment-23513" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-23513"><time pubdate datetime="2014-10-30T21:24:23+00:00">October 30, 2014 at 9:24 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Compiled of course <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=23513#respond' onclick='return addComment.moveForm( "comment-23513", "23513", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-21853">
		<article id="comment-21853" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/dfb9749abaa5f4b662136ce147d8bac7?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">James</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-21853"><time pubdate datetime="2014-10-28T19:51:47+00:00">October 28, 2014 at 7:51 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>It&#8217;s rather counterproductive to create a comprehensive tutorial for a new programming language if three months in you stop updating the code. Please keep your material up to date and accurate or remove it so people can learn accurate information.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=21853#respond' onclick='return addComment.moveForm( "comment-21853", "21853", "respond", "588" )' aria-label='Reply to James'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-23512">
		<article id="comment-23512" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-23512"><time pubdate datetime="2014-10-30T21:24:14+00:00">October 30, 2014 at 9:24 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I update these as frequently as I can, I&#8217;ve been working on this for the past week, this page in particular was updated a few days ago.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=23512#respond' onclick='return addComment.moveForm( "comment-23512", "23512", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-36486">
		<article id="comment-36486" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/95eabaacd3c04627f299562dd0670179?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">mohadd</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-36486"><time pubdate datetime="2014-11-16T10:57:19+00:00">November 16, 2014 at 10:57 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>i have questions:<br />
1)why swift is a compilery language when it runs the same time?<br />
2)when we can exchange the data o fvariables this is correct?<br />
    var name = &#8220;hello&#8221;<br />
    name = 20 //exchange string to int</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=36486#respond' onclick='return addComment.moveForm( "comment-36486", "36486", "respond", "588" )' aria-label='Reply to mohadd'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-36490">
		<article id="comment-36490" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/95eabaacd3c04627f299562dd0670179?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">mohadd</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-36490"><time pubdate datetime="2014-11-16T11:05:26+00:00">November 16, 2014 at 11:05 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Jameson Quave you can write the txt of the Conference that intruduction of swift?<br />
whit link:http:<br />
//www.bing.com/videos/search?q=swift%20programming%20language%2Byoutube&amp;qs=n&amp;form=QBVR&amp;pq=swift%20programming%20language%2Byoutube&amp;sc=0-27&amp;sp=-1&amp;sk=#view=detail&amp;mid=728F416521E939E080A1728F416521E939E080A1</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=36490#respond' onclick='return addComment.moveForm( "comment-36490", "36490", "respond", "588" )' aria-label='Reply to mohadd'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-36816">
		<article id="comment-36816" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/95eabaacd3c04627f299562dd0670179?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">mohadd</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-36816"><time pubdate datetime="2014-11-17T12:29:31+00:00">November 17, 2014 at 12:29 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>i dont want that link.<br />
excuse</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=36816#respond' onclick='return addComment.moveForm( "comment-36816", "36816", "respond", "588" )' aria-label='Reply to mohadd'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-37159">
		<article id="comment-37159" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/7dcac0d11c337285796d8669cdbea1b0?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Stevie Braga</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-37159"><time pubdate datetime="2014-11-18T12:25:56+00:00">November 18, 2014 at 12:25 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>My network was behind a proxy. After changing to a network without proxy, everything worked ok!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=37159#respond' onclick='return addComment.moveForm( "comment-37159", "37159", "respond", "588" )' aria-label='Reply to Stevie Braga'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-45948">
		<article id="comment-45948" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/0f310a527ab4c1d2a85a0fde50b107b9?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Chris</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-45948"><time pubdate datetime="2014-12-24T00:59:31+00:00">December 24, 2014 at 12:59 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hey, thanks for the tutorial. however i needed to add a question mark at the end of these two in order for it to work:</p>
<p>cell.textLabel?.text = rowData[&#8220;trackName&#8221;] as? String<br />
cell.imageView?.image = UIImage(data: imgData!)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=45948#respond' onclick='return addComment.moveForm( "comment-45948", "45948", "respond", "588" )' aria-label='Reply to Chris'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-47614">
		<article id="comment-47614" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-47614"><time pubdate datetime="2015-01-01T11:44:01+00:00">January 1, 2015 at 11:44 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Whether or not these properties are optional (and therefore whether or not they need the question mark) has been changing with every version of Xcode, so it&#8217;s slightly different for everyone. However, Xcode will automatically suggest fixes to these issues.</p>
<p>In either event, you should learn why this is happening by reading up on Optionals in Swift and how they work.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=47614#respond' onclick='return addComment.moveForm( "comment-47614", "47614", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-47584">
		<article id="comment-47584" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5547caa7735e89920e71d946bc45eb97?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://www.example.com' rel='external nofollow' class='url'>Matt Allmendinger</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-47584"><time pubdate datetime="2015-01-01T07:35:44+00:00">January 1, 2015 at 7:35 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi, </p>
<p>thanks for your great work here. I&#8217;m new to Swift (and iOS programming).</p>
<p>I&#8217;m trying to run the code example above and I&#8217;m constantly getting the same mistake (even if I download your code from GitHub) &#8211; I&#8217;m using Xcode 6.1.1</p>
<p>In ViewController.swift</p>
<p>        cell.textLabel.text = rowData[&#8220;trackName&#8221;] as? String<br />
        Error: UILabel? does not have a member named &#8216;text&#8217;<br />
        (&#8230;)<br />
        cell.imageView.image = UIImage(data: imgData!)<br />
        Error: UIImageView? does not have a member named &#8216;image&#8217;</p>
<p>Any idea how I could solve this?</p>
<p>Thanks</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=47584#respond' onclick='return addComment.moveForm( "comment-47584", "47584", "respond", "588" )' aria-label='Reply to Matt Allmendinger'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-47585">
		<article id="comment-47585" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5547caa7735e89920e71d946bc45eb97?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://www.example.com' rel='external nofollow' class='url'>Matt A</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-47585"><time pubdate datetime="2015-01-01T07:52:28+00:00">January 1, 2015 at 7:52 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>could solve it by myself:</p>
<p>change </p>
<p>cell.textLabel.text = rowData[&#8220;trackName&#8221;] as? String<br />
to<br />
cell.textLabel!.text = rowData[&#8220;trackName&#8221;] as? String</p>
<p>AND </p>
<p>cell.imageView.image = UIImage(data: imgData!)<br />
to<br />
cell.imageView!.image = UIImage(data: imgData!)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=47585#respond' onclick='return addComment.moveForm( "comment-47585", "47585", "respond", "588" )' aria-label='Reply to Matt A'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-48228">
		<article id="comment-48228" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/87e8d8ecbf9b5c9286da561e344bef30?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Namster</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-48228"><time pubdate datetime="2015-01-04T18:36:30+00:00">January 4, 2015 at 6:36 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I&#8217;m also new to all of this and I just changed it to:</p>
<p>        cell.textLabel?.text = rowData[&#8220;trackName&#8221;] as? String<br />
        cell.imageView?.image = UIImage(data: imgData!)</p>
<p>I&#8217;m not sure what the difference between a &#8220;?&#8221; and &#8220;!&#8221; is, but they both seem to get the job done.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=48228#respond' onclick='return addComment.moveForm( "comment-48228", "48228", "respond", "588" )' aria-label='Reply to Namster'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-4" id="li-comment-48313">
		<article id="comment-48313" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-48313"><time pubdate datetime="2015-01-05T11:07:10+00:00">January 5, 2015 at 11:07 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Using ? is safer, if the textLabel or imageView don&#8217;t exist, the code is not run.<br />
However, if you use !, you are *insisting* that they exist, and if they don&#8217;t, the app will crash.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=48313#respond' onclick='return addComment.moveForm( "comment-48313", "48313", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-71637">
		<article id="comment-71637" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/93c8541d01dcb6a662d10d7249c55040?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Eli</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-71637"><time pubdate datetime="2015-05-28T10:52:10+00:00">May 28, 2015 at 10:52 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi,</p>
<p>Great tutorial man, just fix the &#8220;or&#8221; to &#8220;for&#8221; under the line:<br />
let task = session.dataTaskWithURL(url, completionHandler: {data, response, error -&gt; Void in</p>
<p>and keep going with your great work</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=71637#respond' onclick='return addComment.moveForm( "comment-71637", "71637", "respond", "588" )' aria-label='Reply to Eli'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-71982">
		<article id="comment-71982" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-71982"><time pubdate datetime="2015-06-05T08:08:00+00:00">June 5, 2015 at 8:08 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks for that <img src="http://jamesonquave.com/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=71982#respond' onclick='return addComment.moveForm( "comment-71982", "71982", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-72718">
		<article id="comment-72718" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5e4e9f16c3ea525a5af6004651ff34e8?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Marco</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-72718"><time pubdate datetime="2015-06-13T06:36:51+00:00">June 13, 2015 at 6:36 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I am getting this error:</p>
<p>&#8220;extra argument &#8216;error&#8217; in call&#8221; at this line:</p>
<p>if let jsonResult = NSJSONSerialization.JSONObjectWithData(data!, options: NSJSONReadingOptions.MutableContainers, error: &amp;err) as? NSDictionary {</p>
<p>the problem seems to be &#8220;error: &amp;err&#8221;</p>
<p>I am using Xcode 7beta</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=72718#respond' onclick='return addComment.moveForm( "comment-72718", "72718", "respond", "588" )' aria-label='Reply to Marco'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor even depth-2" id="li-comment-72725">
		<article id="comment-72725" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-72725"><time pubdate datetime="2015-06-13T10:12:21+00:00">June 13, 2015 at 10:12 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Xcode 7 Beta uses a new Error handling paradigm. Here&#8217;s the short version of how to fix cases like this:</p>
<p>1) Delete the error argument, and any references to the err variable.<br />
2) Put try! in front of the call that used to have the error argument (this is unsafe, but will help you get through this for now)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=72725#respond' onclick='return addComment.moveForm( "comment-72725", "72725", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-3" id="li-comment-72726">
		<article id="comment-72726" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-72726"><time pubdate datetime="2015-06-13T10:13:07+00:00">June 13, 2015 at 10:13 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>e.g.<br />
let jsonResult = try! NSJSONSerialization.JSONObjectWithData(data!, options: nil) as! NSDictionary {</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=72726#respond' onclick='return addComment.moveForm( "comment-72726", "72726", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-72738">
		<article id="comment-72738" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5e4e9f16c3ea525a5af6004651ff34e8?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Marco</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-72738"><time pubdate datetime="2015-06-13T13:15:24+00:00">June 13, 2015 at 1:15 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hello,</p>
<p>thanks for the answer.<br />
But using &#8220;try&#8221; why are setting &#8220;options&#8221; to &#8220;nil&#8221;?</p>
<p>Thanks</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=72738#respond' onclick='return addComment.moveForm( "comment-72738", "72738", "respond", "588" )' aria-label='Reply to Marco'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-72747">
		<article id="comment-72747" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-72747"><time pubdate datetime="2015-06-13T15:19:24+00:00">June 13, 2015 at 3:19 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Oh you don&#8217;t need to set them to nil, we aren&#8217;t really interested in the differences in the option for this tutorial. The options basically just control whether or not you can modify values after retrieving them</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=72747#respond' onclick='return addComment.moveForm( "comment-72747", "72747", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-72796">
		<article id="comment-72796" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/5e4e9f16c3ea525a5af6004651ff34e8?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Marco</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-72796"><time pubdate datetime="2015-06-14T05:05:09+00:00">June 14, 2015 at 5:05 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Doing this way build is ok</p>
<p>if let jsonResult = try! NSJSONSerialization.JSONObjectWithData(data!, options: NSJSONReadingOptions.MutableLeaves) as? NSDictionary {<br />
                    if let results: NSArray = jsonResult[&#8220;results&#8221;] as? NSArray {<br />
                        dispatch_async(dispatch_get_main_queue(), {<br />
                            self.tableData = results<br />
                            self.appsTableView!.reloadData()<br />
                        })<br />
                    }<br />
                }</p>
<p>but I get an error when launching the app</p>
<p>2015-06-14 13:04:28.066 iTunesSearch[1578:295858] CFNetwork SSLHandshake failed (-9824)<br />
2015-06-14 13:04:28.068 iTunesSearch[1578:295858] NSURLSession/NSURLConnection HTTP load failed (kCFStreamErrorDomainSSL, -9824)<br />
Task completed<br />
An SSL error has occurred and a secure connection to the server cannot be made.<br />
fatal error: unexpectedly found nil while unwrapping an Optional value<br />
(lldb)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=72796#respond' onclick='return addComment.moveForm( "comment-72796", "72796", "respond", "588" )' aria-label='Reply to Marco'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-75337">
		<article id="comment-75337" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/e22f69ec1cafb6be9272c9b685fe3fe7?s=68&amp;d=retro&amp;r=PG' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Mason</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-75337"><time pubdate datetime="2015-07-17T00:26:34+00:00">July 17, 2015 at 12:26 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Hi, thanks for the tutorial, it&#8217;s very interesting so far. I just ran into something that may be due to newer changes, perhaps? I&#8217;m not sure. Copying and pasting in the code above for tableView results in XCode giving some errors and it won&#8217;t compile:</p>
<p>For the lines:<br />
    if let rowData: NSDictionary = self.tableData[indexPath.row] as? NSDictionary,<br />
        // Grab the artworkUrl60 key to get an image URL for the app&#8217;s thumbnail<br />
It&#8217;s complaining: &#8220;Expected &#8216;{&#8216; after &#8216;if&#8217; condition&#8221;.</p>
<p>And then a few lines further down for:<br />
    trackName = rowData[&#8220;trackName&#8221;] as? String {<br />
It&#8217;s complaining: &#8220;Braced block of statements is an unused closure&#8221;.</p>
<p>Being new to Swift I&#8217;m not sure yet how to address these but I&#8217;ll dig into it. Any suggestions would be great. Thanks for putting the work into this for us all!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=75337#respond' onclick='return addComment.moveForm( "comment-75337", "75337", "respond", "588" )' aria-label='Reply to Mason'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-75368">
		<article id="comment-75368" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://0.gravatar.com/avatar/e22f69ec1cafb6be9272c9b685fe3fe7?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn">Mason</span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-75368"><time pubdate datetime="2015-07-17T13:51:19+00:00">July 17, 2015 at 1:51 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Okay, never mind my comment above. I had thought I was running the latest XCode but in fact it was a little behind. I updated and everything is working now &#8212; thanks again, sorry for the false alarm!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=75368#respond' onclick='return addComment.moveForm( "comment-75368", "75368", "respond", "588" )' aria-label='Reply to Mason'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-jquave bypostauthor odd alt depth-2" id="li-comment-75650">
		<article id="comment-75650" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='http://1.gravatar.com/avatar/d9786c83345117d560bbeab0e1f26814?s=39&amp;d=retro&amp;r=PG' class='avatar avatar-39 photo' height='39' width='39' /><span class="fn"><a href='http://jamesonquave.com' rel='external nofollow' class='url'>Jameson Quave</a></span> on <a href="http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/#comment-75650"><time pubdate datetime="2015-07-27T09:58:25+00:00">July 27, 2015 at 9:58 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>What version of Xcode?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/blog/developing-ios-apps-using-swift-tutorial-part-2/?replytocom=75650#respond' onclick='return addComment.moveForm( "comment-75650", "75650", "respond", "588" )' aria-label='Reply to Jameson Quave'>Reply <span>&darr;</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		</ol>

		
	
									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/developing-ios-apps-using-swift-tutorial-part-2/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://jamesonquave.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-describedby="email-notes" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-describedby="form-allowed-tags" aria-required="true"></textarea></p>						<p class="form-allowed-tags" id="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" class="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='588' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="57e48919f9" /></p>					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


				
			</div><!-- #content -->
		</div><!-- #primary -->

	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			
<div id="supplementary" class="three">
		<div id="first" class="widget-area" role="complementary">
		<aside id="text-3" class="widget widget_text"><h3 class="widget-title">Jameson Quave</h3>			<div class="textwidget">Wanna get posts like these delivered to your email? <a href='http://eepurl.com/sDFL9'>Sign up for the mailing list</a>.
<hr />

<img src='http://jamesonquave.com/blog/wp-content/uploads/mejq.jpeg' / width=100 height=100><br />

I am an app developer in Austin, TX. I spend time dabbling with iPhone, iPad, Android, and web technologies. I write about technology, startups, and my technology & entrepreneurial experiments.
</div>
		</aside>	</div><!-- #first .widget-area -->
	
		<div id="second" class="widget-area" role="complementary">
		<aside id="linkcat-9" class="widget widget_links"><h3 class="widget-title">Connect</h3>
	<ul class='xoxo blogroll'>
<li><a href="https://www.facebook.com/JamesonQuave" title="Facebook" target="_blank">Facebook</a></li>
<li><a href="https://plus.google.com/+JamesonQuave" title="Add me on Google+">Google+</a></li>
<li><a href="http://twitter.com/jquave" rel="me" title="Follow me on Twitter" target="_blank">Twitter</a></li>

	</ul>
</aside>
<aside id="text-4" class="widget widget_text"><h3 class="widget-title">External Links</h3>			<div class="textwidget"><a href="http://www.ontoplist.com/blog-directory/" title="Blog Directory" target="_blank">Blog Directory</a><br />


<a href="http://www.blogcatalog.com">BlogCatalog</a><br />

Blogging Fusion <a href="http://www.bloggingfusion.com/" title="Blogging Fusion Blog Directory">Blog Directory</a><br />

<a href="http://yp.blogflux.com/">Yellow Pages for USA and Canada</a><br />

</div>
		</aside>	</div><!-- #second .widget-area -->
	
		<div id="third" class="widget-area" role="complementary">
		<aside id="text-6" class="widget widget_text"><h3 class="widget-title">Subscribe for free</h3>			<div class="textwidget"><a href='http://jamesonquave.com/blog/subscribe'>Subscribe for free <img src='http://jamesonquave.com/images/orangeArrow.gif' border='0' /></a></div>
		</aside><aside id="rss-2" class="widget widget_rss"><h3 class="widget-title"><a class='rsswidget' href='http://jamesonquave.com/blog/feed/'><img style='border:0' width='14' height='14' src='http://jamesonquave.com/blog/wp-includes/images/rss.png' alt='RSS' /></a> <a class='rsswidget' href='http://jamesonquave.com/blog'>Jameson Quave&#8217;s Blog</a></h3><ul><li><a class='rsswidget' href='http://jamesonquave.com/blog/developing-tvos-apps-for-apple-tv-part-2/'>Developing tvOS Apps for Apple TV [Part 2]</a> <span class="rss-date">September 11, 2015</span> <cite>Jameson Quave</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/developing-tvos-apps-for-apple-tv-with-swift/'>Developing tvOS Apps for Apple TV [Part 1]</a> <span class="rss-date">September 9, 2015</span> <cite>Jameson Quave</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/objective-c-pointers-and-swift/'>Objective-C Pointers and Swift 2: A Simple Guide</a> <span class="rss-date">August 24, 2015</span> <cite>Jameson Quave</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/list-comprehensions-and-performance-with-swift/'>List Comprehensions and Performance With Swift</a> <span class="rss-date">August 15, 2015</span> <cite>Veronica Ray</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/swift-2-whats-new/'>Swift 2 – What’s new</a> <span class="rss-date">June 10, 2015</span> <cite>Jameson Quave</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/wwdc-2015-developer-highlights/'>WWDC 2015 Developer Highlights</a> <span class="rss-date">June 8, 2015</span> <cite>Jameson Quave</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/open-source-swift-a-look-at-the-top-swift-repositories/'>Open Source Swift – A Look At The Top Swift Repositories</a> <span class="rss-date">June 5, 2015</span> <cite>Jameson Quave</cite></li><li><a class='rsswidget' href='http://jamesonquave.com/blog/function-currying-in-swift/'>Function Currying in Swift</a> <span class="rss-date">May 3, 2015</span> <cite>Guanshan Liu</cite></li></ul></aside>	</div><!-- #third .widget-area -->
	</div><!-- #supplementary -->
<center><div>
			 Copyright 2015 Lumarow, LLC.
			 <br />
			<a href="https://mixpanel.com/f/partner"><img src="//cdn.mxpnl.com/site_media/images/partner/badge_blue.png" alt="Mobile Analytics" /></a>
<hr />
Also From Lumarow: 
<a href="http://www.learnwatchkit.com" alt="Learn WatchKit">Learn WatchKit</a>
</div></center>

	</footer><!-- #colophon -->
	
	
</div><!-- #page -->

		<!-- Social Ring JS Start -->
	<div id="fb-root"></div><script src="http://connect.facebook.net/en_US/all.js#xfbml=1"></script>
	<script type="text/javascript">
		window.___gcfg = {
		  lang: 'en-US'
		};
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	</script>
	<script type='text/javascript' src='https://apis.google.com/js/plusone.js'></script>
<!--	<script type='text/javascript' src='http://platform.twitter.com/widgets.js'></script>-->
    <!-- JQ <script type="text/javascript" src="http://assets.pinterest.com/js/pinit.js"></script>-->
	<script type="text/javascript">
	/*
		(function() {
		  var li = document.createElement('script'); li.type = 'text/javascript'; li.async = true;
		  li.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + '//platform.stumbleupon.com/1/widgets.js';
		  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(li, s);
		})();
		*/
	</script>
		<!-- Social Ring JS End -->
	<script type='text/javascript' src='http://jamesonquave.com/blog/wp-includes/js/comment-reply.min.js?ver=4.1.1'></script>
<script>var pltNewTabURLs = ["http:\/\/jamesonquave.com\/forum"];(function(){jQuery(function(e){return e("body").on("click","a",function(t){var n;n=e(this);if(e.inArray(n.attr("href"),pltNewTabURLs)>-1)return n.attr("target","_blank")})})}).call(this);</script>
	<!-- Written.com Tracker -->
	<script type="text/javascript">
		(function() {
			var wa = document.createElement('script');
			wa.type = 'text/javascript';
			wa.defer = true; wa.async = true;
			wa.src = "https://d3dcugpvnepf41.cloudfront.net/written-analytics.js";
			var s = document.getElementsByTagName('script')[0];
			s.parentNode.insertBefore(wa, s);
		})();
	</script>

	
<script type="text/javascript" src="/blog/syntax-highlighter/scripts/minCoreAndJSBrush.js"></script>
<script type="text/javascript">SyntaxHighlighter.all();</script>


</body>
</html>
