[
 {
  "file": "/Volumes/KINGSTON/LockheedMartin 2/Lockheed%20Martin/CSV.swift",
  "offset": 401,
  "remove": 1694,
  "text": "(contents: String, delimiter: NSCharacterSet, encoding: UInt) throws {\n        \n            self.delimiter = delimiter\n            \n            let newline = NSCharacterSet.newlineCharacterSet()\n            var lines: [String] = []\n            contents.stringByTrimmingCharactersInSet(newline).enumerateLines { line, stop in lines.append(line) }\n            \n            self.headers = self.parseHeaders(fromLines: lines)\n            self.rows = self.parseRows(fromLines: lines)\n            self.columns = self.parseColumns(fromLines: lines)\n        \n    }\n    \n    public convenience init(contents: String) throws {\n        let comma = NSCharacterSet(charactersInString: \",\")\n        try self.init(contents: contents, delimiter: comma, encoding: NSUTF8StringEncoding)\n    }\n    \n    public convenience init(contents: String, encoding: UInt) throws {\n        let comma = NSCharacterSet(charactersInString: \",\")\n        try self.init(contents: contents, delimiter: comma, encoding: encoding)\n    }\n    \n    func parseHeaders(fromLines lines: [String]) -> [String] {\n        return lines[0].componentsSeparatedByCharactersInSet(self.delimiter)\n    }\n    \n    func parseRows(fromLines lines: [String]) -> [Dictionary<String, String>] {\n        var rows: [Dictionary<String, String>] = []\n        \n        for (lineNumber, line) in lines.enumerate() {\n            if lineNumber == 0 {\n                continue\n            }\n            \n            var row = Dictionary<String, String>()\n            let values = line.componentsSeparatedByCharactersInSet(self.delimiter)\n            for (index, header) in self.headers.enumerate(",
 }
]
